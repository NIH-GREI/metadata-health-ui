{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/types/api.ts"],"sourcesContent":["export type ResourceType = string;\n\nexport type FieldStatus = 'mandatory' | 'recommended' | 'optional';\n\nexport interface SubfieldInfo {\n  count: number;\n  instances: number;\n  missing: number;\n  completeness: number;\n  values?: {\n    [value: string]: number;\n  };\n}\n\nexport interface FieldInfo {\n  count: number;\n  instances: number;\n  missing: number;\n  fieldStatus: FieldStatus;\n  completeness: number;\n  subfields?: {\n    [subfieldName: string]: SubfieldInfo;\n  };\n}\n\nexport interface CategoryStats {\n  [field: string]: FieldInfo;\n}\n\nexport interface CategoryCompleteness {\n  completeness: number;\n}\n\nexport interface CategoriesStats {\n  mandatory: CategoryCompleteness;\n  recommended: CategoryCompleteness;\n  optional: CategoryCompleteness;\n}\n\nexport interface StatsView {\n  count: number;\n  fields: CategoryStats;\n  categories: CategoriesStats;\n}\n\nexport interface Stats {\n  summary: StatsView;\n  byResourceType: {\n    resourceTypes: {\n      [resourceType: string]: StatsView;\n    };\n  };\n}\n\nexport interface Entity {\n  id: string;\n  name: string;\n  stats: Stats;\n  type: 'providers' | 'clients';\n}\n\nexport interface Provider extends Entity {\n  type: 'providers';\n  attributes: {\n    name: string;\n    displayName: string;\n    symbol: string;\n    website?: string;\n    created: string;\n    updated: string;\n    description: string | null;\n    isActive: boolean;\n    memberType?: string;\n    rorId?: string;\n    isConsortium?: boolean;\n    region: string;\n    country: string;\n    logoUrl?: string | null;\n    organizationType: string;\n    focusArea: string | null;\n    nonProfitStatus: string;\n    year?: number | null;\n    joined?: string | null;\n    doiEstimate: number;\n  };\n  relationships: {\n    prefixes: string[];\n    clients?: string[];\n  };\n}\n\nexport interface Client extends Entity {\n  type: 'clients';\n  attributes: {\n    name: string;\n    symbol: string;\n    year: number;\n    alternateName: string | null;\n    description: string | null;\n    language: string[];\n    clientType: string;\n    domains: string;\n    re3data: string | null;\n    opendoar: string | null;\n    issn: Record<string, unknown>;\n    url: string | null;\n    created: string;\n    updated: string;\n    isActive: boolean;\n  };\n  relationships: {\n    provider: string;\n    prefixes: string[];\n  };\n}\n\nexport class ApiError extends Error {\n  constructor(\n    message: string,\n    public statusCode?: number,\n    public cause?: unknown\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nexport class ClientFetchError extends ApiError {\n  constructor(\n    message: string,\n    public clientId: string,\n    statusCode?: number,\n    cause?: unknown\n  ) {\n    super(message, statusCode, cause);\n    this.name = 'ClientFetchError';\n  }\n}\n\nexport class PartialClientsFetchError extends ApiError {\n  constructor(\n    message: string,\n    public failedClients: { id: string; error: Error }[],\n    public successfulClients: string[],\n    statusCode?: number\n  ) {\n    super(message, statusCode);\n    this.name = 'PartialClientsFetchError';\n  }\n}\n\nexport class ProviderFetchError extends ApiError {\n  constructor(\n    message: string,\n    public providerId: string,\n    statusCode?: number,\n    cause?: unknown\n  ) {\n    super(message, statusCode, cause);\n    this.name = 'ProviderFetchError';\n  }\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  meta?: {\n    total?: number;\n    totalPages?: number;\n    page?: number;\n  };\n  error?: {\n    message: string;\n    code: string;\n    details?: unknown;\n  };\n}\n\nexport type ProviderResponse = ApiResponse<Provider>;\nexport type ClientResponse = ApiResponse<Client>;\nexport type ProvidersResponse = ApiResponse<Provider[]>;\nexport type ClientsResponse = ApiResponse<Client[]>;\n\nexport interface StatsFilters {\n  resourceType?: string;\n  fieldStatus?: string;\n  timeRange?: string;\n}\n\nexport interface StatsViewOptions {\n  filters?: StatsFilters;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport function isProvider(entity: Entity | undefined): entity is Provider {\n  return !!entity && entity.type === 'providers';\n}\n\nexport function isClient(entity: Entity | undefined): entity is Client {\n  return !!entity && entity.type === 'clients';\n}\n\nexport function getResourceTypeStats(stats: Stats, resourceType?: string): StatsView | undefined {\n  if (!resourceType) {\n    return stats.summary;\n  }\n  return stats.byResourceType?.resourceTypes?.[resourceType];\n}\n\nexport function isStats(stats: unknown): stats is Stats {\n  if (typeof stats !== 'object' || stats === null) {\n    return false;\n  }\n\n  const statsObj = stats as { summary?: { count?: unknown; fields?: unknown } };\n  \n  return (\n    'summary' in stats &&\n    typeof statsObj.summary === 'object' &&\n    statsObj.summary !== null &&\n    'count' in statsObj.summary &&\n    typeof statsObj.summary.count === 'number' &&\n    'fields' in statsObj.summary &&\n    typeof statsObj.summary.fields === 'object' &&\n    statsObj.summary.fields !== null\n  );\n}"],"names":[],"mappings":";;;;;;;;;;AAoHO,MAAM,iBAAiB;;;IAC5B,YACE,OAAe,EACf,AAAO,UAAmB,EAC1B,AAAO,KAAe,CACtB;QACA,KAAK,CAAC,eAHC,aAAA,iBACA,QAAA;QAGP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,yBAAyB;;IACpC,YACE,OAAe,EACf,AAAO,QAAgB,EACvB,UAAmB,EACnB,KAAe,CACf;QACA,KAAK,CAAC,SAAS,YAAY,aAJpB,WAAA;QAKP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,iCAAiC;;;IAC5C,YACE,OAAe,EACf,AAAO,aAA6C,EACpD,AAAO,iBAA2B,EAClC,UAAmB,CACnB;QACA,KAAK,CAAC,SAAS,kBAJR,gBAAA,oBACA,oBAAA;QAIP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,2BAA2B;;IACtC,YACE,OAAe,EACf,AAAO,UAAkB,EACzB,UAAmB,EACnB,KAAe,CACf;QACA,KAAK,CAAC,SAAS,YAAY,aAJpB,aAAA;QAKP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAiCO,SAAS,WAAW,MAA0B;IACnD,OAAO,CAAC,CAAC,UAAU,OAAO,IAAI,KAAK;AACrC;AAEO,SAAS,SAAS,MAA0B;IACjD,OAAO,CAAC,CAAC,UAAU,OAAO,IAAI,KAAK;AACrC;AAEO,SAAS,qBAAqB,KAAY,EAAE,YAAqB;IACtE,IAAI,CAAC,cAAc;QACjB,OAAO,MAAM,OAAO;IACtB;IACA,OAAO,MAAM,cAAc,EAAE,eAAe,CAAC,aAAa;AAC5D;AAEO,SAAS,QAAQ,KAAc;IACpC,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;QAC/C,OAAO;IACT;IAEA,MAAM,WAAW;IAEjB,OACE,aAAa,SACb,OAAO,SAAS,OAAO,KAAK,YAC5B,SAAS,OAAO,KAAK,QACrB,WAAW,SAAS,OAAO,IAC3B,OAAO,SAAS,OAAO,CAAC,KAAK,KAAK,YAClC,YAAY,SAAS,OAAO,IAC5B,OAAO,SAAS,OAAO,CAAC,MAAM,KAAK,YACnC,SAAS,OAAO,CAAC,MAAM,KAAK;AAEhC"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/api/client.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { ApiError, ApiResponse } from '../types/api';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n\nif (!API_BASE_URL) {\n  throw new Error('NEXT_PUBLIC_API_BASE_URL environment variable is not set');\n}\n\nexport const apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: false,\n  timeout: 30000,\n});\n\napiClient.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    return Promise.reject(new ApiError('Request configuration error', undefined, error));\n  }\n);\n\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error: AxiosError<ApiResponse<unknown>>) => {\n    const statusCode = error.response?.status;\n    const errorResponse = error.response?.data;\n\n    if (errorResponse?.error) {\n      return Promise.reject(\n        new ApiError(\n          errorResponse.error.message,\n          statusCode,\n          errorResponse.error.details\n        )\n      );\n    }\n\n    return Promise.reject(\n      new ApiError(\n        error.message || 'An unexpected error occurred',\n        statusCode,\n        error\n      )\n    );\n  }\n);"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM;AAEN,uCAAmB;;AAEnB;AAEO,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS;IACT,SAAS;QACP,gBAAgB;QAChB,UAAU;IACZ;IACA,iBAAiB;IACjB,SAAS;AACX;AAEA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,0HAAA,CAAA,WAAQ,CAAC,+BAA+B,WAAW;AAC/E;AAGF,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,MAAM,aAAa,MAAM,QAAQ,EAAE;IACnC,MAAM,gBAAgB,MAAM,QAAQ,EAAE;IAEtC,IAAI,eAAe,OAAO;QACxB,OAAO,QAAQ,MAAM,CACnB,IAAI,0HAAA,CAAA,WAAQ,CACV,cAAc,KAAK,CAAC,OAAO,EAC3B,YACA,cAAc,KAAK,CAAC,OAAO;IAGjC;IAEA,OAAO,QAAQ,MAAM,CACnB,IAAI,0HAAA,CAAA,WAAQ,CACV,MAAM,OAAO,IAAI,gCACjB,YACA;AAGN"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/utils/api.ts"],"sourcesContent":["\nexport async function fetchProviderData(providerId: string) {\n  try {\n    // Ensure providerId has .json extension when fetching\n    const fileName = providerId.endsWith('.json') ? providerId : `${providerId}.json`;\n    const response = await fetch(`http://localhost:3000/api/providers/${fileName}`);\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to fetch provider data');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching provider data:', error);\n    throw error;\n  }"],"names":[],"mappings":";;;AACO,eAAe,kBAAkB,UAAkB;IACxD,IAAI;QACF,sDAAsD;QACtD,MAAM,WAAW,WAAW,QAAQ,CAAC,WAAW,aAAa,GAAG,WAAW,KAAK,CAAC;QACjF,MAAM,WAAW,MAAM,MAAM,CAAC,oCAAoC,EAAE,UAAU;QAE9E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI;QACrC;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AAAA"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/api/endpoints.ts"],"sourcesContent":["'use client'\n\nimport { apiClient } from './client';\nimport {\n  Provider,\n  Client,\n  ApiResponse,\n  ClientFetchError,\n  ProviderFetchError\n} from '../types/api';\n\nimport { fetchProviderData } from '@/utils/api';\n\nconst API_BASE = '/api/v1';\n\nexport const getProviders = async (): Promise<Provider[]> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Provider[]>>(`${API_BASE}/providers/attributes`);\n    return response.data.data;\n  } catch (error) {\n    throw new ProviderFetchError('Failed to fetch providers', 'all', undefined, error);\n  }\n};\n\nexport const getProviderDetails = async (providerId: string): Promise<Provider> => {\n  try {\n    // First, try to get the data from the uploaded file\n    const response = await fetchProviderData(providerId);\n\n    if (response.data) {\n      // If we found the uploaded file, return its data\n      // const data = await response.json();\n      // return data;\n      const temp = response.data.data;\n      console.log(\"DATA\", temp);\n      return temp;\n    }\n\n    // If no local file is found, try the API\n    const apiResponse = await apiClient.get<ApiResponse<Provider>>(`${API_BASE}/providers/${providerId}`);\n    return apiResponse.data.data;\n  } catch (error) {\n    throw new ProviderFetchError('Failed to fetch provider details', providerId, undefined, error);\n  }\n};\n\nexport const getProviderStats = async (providerId: string): Promise<Provider> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Provider>>(`${API_BASE}/providers/${providerId}/stats`);\n    return response.data.data;\n  } catch (error) {\n    throw new ProviderFetchError('Failed to fetch provider stats', providerId, undefined, error);\n  }\n};\n\nexport const getProviderClientsList = async (providerId: string): Promise<Client[]> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Client[]>>(`${API_BASE}/providers/${providerId}/clients`);\n    return response.data.data;\n  } catch (error) {\n    throw new ProviderFetchError('Failed to fetch provider clients list', providerId, undefined, error);\n  }\n};\n\nexport const getClients = async (): Promise<Client[]> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Client[]>>(`${API_BASE}/clients/attributes`);\n    return response.data.data;\n  } catch (error) {\n    throw new ClientFetchError('Failed to fetch clients', 'all', undefined, error);\n  }\n};\n\nexport const getClient = async (clientId: string): Promise<Client> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Client>>(`${API_BASE}/clients/${clientId}`);\n    return response.data.data;\n  } catch (error) {\n    throw new ClientFetchError('Failed to fetch client', clientId, undefined, error);\n  }\n};\n\nexport const getClientStats = async (clientId: string): Promise<Client> => {\n  try {\n    const response = await apiClient.get<ApiResponse<Client>>(`${API_BASE}/clients/${clientId}/stats`);\n    return response.data.data;\n  } catch (error) {\n    throw new ClientFetchError('Failed to fetch client stats', clientId, undefined, error);\n  }\n};"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAQA;AAXA;;;;AAaA,MAAM,WAAW;AAEV,MAAM,eAAe;IAC1B,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAA0B,GAAG,SAAS,qBAAqB,CAAC;QAChG,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,qBAAkB,CAAC,6BAA6B,OAAO,WAAW;IAC9E;AACF;AAEO,MAAM,qBAAqB,OAAO;IACvC,IAAI;QACF,oDAAoD;QACpD,MAAM,WAAW,MAAM,CAAA,GAAA,mHAAA,CAAA,oBAAiB,AAAD,EAAE;QAEzC,IAAI,SAAS,IAAI,EAAE;YACjB,iDAAiD;YACjD,sCAAsC;YACtC,eAAe;YACf,MAAM,OAAO,SAAS,IAAI,CAAC,IAAI;YAC/B,QAAQ,GAAG,CAAC,QAAQ;YACpB,OAAO;QACT;QAEA,yCAAyC;QACzC,MAAM,cAAc,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAwB,GAAG,SAAS,WAAW,EAAE,YAAY;QACpG,OAAO,YAAY,IAAI,CAAC,IAAI;IAC9B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,qBAAkB,CAAC,oCAAoC,YAAY,WAAW;IAC1F;AACF;AAEO,MAAM,mBAAmB,OAAO;IACrC,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAwB,GAAG,SAAS,WAAW,EAAE,WAAW,MAAM,CAAC;QACvG,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,qBAAkB,CAAC,kCAAkC,YAAY,WAAW;IACxF;AACF;AAEO,MAAM,yBAAyB,OAAO;IAC3C,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAwB,GAAG,SAAS,WAAW,EAAE,WAAW,QAAQ,CAAC;QACzG,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,qBAAkB,CAAC,yCAAyC,YAAY,WAAW;IAC/F;AACF;AAEO,MAAM,aAAa;IACxB,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAwB,GAAG,SAAS,mBAAmB,CAAC;QAC5F,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,mBAAgB,CAAC,2BAA2B,OAAO,WAAW;IAC1E;AACF;AAEO,MAAM,YAAY,OAAO;IAC9B,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAsB,GAAG,SAAS,SAAS,EAAE,UAAU;QAC3F,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,mBAAgB,CAAC,0BAA0B,UAAU,WAAW;IAC5E;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,2HAAA,CAAA,YAAS,CAAC,GAAG,CAAsB,GAAG,SAAS,SAAS,EAAE,SAAS,MAAM,CAAC;QACjG,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0HAAA,CAAA,mBAAgB,CAAC,gCAAgC,UAAU,WAAW;IAClF;AACF"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/hooks/use-entities.ts"],"sourcesContent":["'use client';\n\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  getProviders,\n  getProviderDetails,\n  getProviderStats,\n  getClients,\n  getClient,\n  getClientStats,\n} from '@/lib/api/endpoints';\nimport type { Provider, Client } from '@/lib/types/api';\n\nexport function useProviders() {\n  return useQuery<Provider[], Error>({\n    queryKey: ['providers'],\n    queryFn: getProviders,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n\nexport function useProviderDetails(providerId: string) {\n  return useQuery<Provider, Error>({\n    queryKey: ['provider', providerId],\n    queryFn: () => getProviderDetails(providerId),\n    enabled: !!providerId,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n\nexport function useProviderStats(providerId: string) {\n  return useQuery<Provider, Error>({\n    queryKey: ['provider-stats', providerId],\n    queryFn: () => getProviderStats(providerId),\n    enabled: !!providerId,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n\nexport function useClients() {\n  return useQuery<Client[], Error>({\n    queryKey: ['clients'],\n    queryFn: getClients,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n\nexport function useClientDetails(clientId: string) {\n  return useQuery<Client, Error>({\n    queryKey: ['client', clientId],\n    queryFn: () => getClient(clientId),\n    enabled: !!clientId,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n\nexport function useClientStats(clientId: string) {\n  return useQuery<Client, Error>({\n    queryKey: ['client-stats', clientId],\n    queryFn: () => getClientStats(clientId),\n    enabled: !!clientId,\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AADA;AAFA;;;AAaO,SAAS;IACd,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAqB;QACjC,UAAU;YAAC;SAAY;QACvB,SAAS,8HAAA,CAAA,eAAY;QACrB,WAAW,OAAO,KAAK;IACzB;AACF;AAEO,SAAS,mBAAmB,UAAkB;IACnD,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAmB;QAC/B,UAAU;YAAC;YAAY;SAAW;QAClC,SAAS,IAAM,CAAA,GAAA,8HAAA,CAAA,qBAAkB,AAAD,EAAE;QAClC,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;AAEO,SAAS,iBAAiB,UAAkB;IACjD,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAmB;QAC/B,UAAU;YAAC;YAAkB;SAAW;QACxC,SAAS,IAAM,CAAA,GAAA,8HAAA,CAAA,mBAAgB,AAAD,EAAE;QAChC,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAmB;QAC/B,UAAU;YAAC;SAAU;QACrB,SAAS,8HAAA,CAAA,aAAU;QACnB,WAAW,OAAO,KAAK;IACzB;AACF;AAEO,SAAS,iBAAiB,QAAgB;IAC/C,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAiB;QAC7B,UAAU;YAAC;YAAU;SAAS;QAC9B,SAAS,IAAM,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD,EAAE;QACzB,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;AAEO,SAAS,eAAe,QAAgB;IAC7C,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAiB;QAC7B,UAAU;YAAC;YAAgB;SAAS;QACpC,SAAS,IAAM,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;QAC9B,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCompleteness(value: number): string {\n  return `${(value * 100).toFixed(1)}%`;\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,mBAAmB,KAAa;IAC9C,OAAO,GAAG,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AACvC"}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { Text } from \"@/components/typography/typography\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, children, ...props }, ref) => (\n  <Text\n    ref={ref}\n    variant=\"h3\"\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </Text>\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nexport { Card, CardHeader, CardTitle, CardContent }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,8IAAA,CAAA,OAAI;QACH,KAAK;QACL,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGL,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {\n  indicatorClassName?: string;\n}\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  ProgressProps\n>(({ className, value, indicatorClassName, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className={cn(\n        \"h-full w-full flex-1 bg-primary transition-all\",\n        indicatorClassName\n      )}\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAHA;;;;;AAUA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,OAAO,EAAE,oBACrD,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kDACA;YAEF,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/constants.ts"],"sourcesContent":["export type FieldCategory = 'mandatory' | 'recommended' | 'optional';\n\nexport interface SubfieldMetadata {\n  displayLabel: string;\n  description: string;\n  url: string;\n}\n\nexport interface FieldMetadata {\n  category: FieldCategory;\n  displayLabel: string;\n  summary: string;\n  url: string;\n  subfields?: Record<string, SubfieldMetadata>;\n}\n\nexport const METADATA_FIELDS: Record<string, FieldMetadata> = {\n  // Mandatory Fields\n  'identifier': {\n    category: 'mandatory',\n    displayLabel: 'Identifier',\n    summary: \"The Identifier is a unique string that identifies a resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/identifier/\",\n    subfields: {\n      'identifierType': {\n        displayLabel: 'Identifier Type',\n        description: 'The type of identifier.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/identifier/#identifiertype'\n      }\n    }\n  },\n  'creators': {\n    category: 'mandatory',\n    displayLabel: 'Creators',\n    summary: \"The main researchers involved in producing the data, or the authors of the publication.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/\",\n    subfields: {\n      'nameType': {\n        displayLabel: 'Name Type',\n        description: 'The type of name for the creator.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#creatornametype'\n      },\n      'nameIdentifier': {\n        displayLabel: 'Name Identifier',\n        description: 'Unique identifier for the creator.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#creatornameidentifier'\n      },\n      'nameIdentifierScheme': {\n        displayLabel: 'Name Identifier Scheme',\n        description: 'The name of the name identifier scheme.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#a-nameidentifierscheme'\n      },\n      'affiliation': {\n        displayLabel: 'Affiliation',\n        description: 'The organizational or institutional affiliation of the creator.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#a-affiliationidentifier'\n      },\n      'affiliationIdentifier': {\n        displayLabel: 'Affiliation Identifier',\n        description: 'Unique identifier for the affiliation of the creator.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#a-affiliationidentifier'\n      },\n      'affiliationIdentifierScheme': {\n        displayLabel: 'Affiliation Identifier Scheme',\n        description: 'The name of the affiliation identifier scheme',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/creator/#b-affiliationidentifierscheme'\n      }\n    }\n  },\n  'titles': {\n    category: 'mandatory',\n    displayLabel: 'Titles',\n    summary: \"A name or title by which a resource is known.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/title/\"\n  },\n  'publisher': {\n    category: 'mandatory',\n    displayLabel: 'Publisher',\n    summary: \"The name of the entity that holds, archives, publishes, prints, distributes, releases, issues, or produces the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/publisher/\"\n  },\n  'publicationYear': {\n    category: 'mandatory',\n    displayLabel: 'Publication Year',\n    summary: \"The year when the data was or will be made publicly available.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/publicationyear/\"\n  },\n  // Recommended Fields\n  'resourceType': {\n    category: 'recommended',\n    displayLabel: 'Resource Type',\n    summary: \"A description of the resource type.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/resourcetype/\",\n    subfields: {\n      'resourceTypeGeneral': {\n        displayLabel: 'Resource Type General',\n        description: 'The general type of the resource.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/resourcetype/#resourcetypegeneral'\n      }\n    }\n  },\n  'subject': {\n    category: 'recommended',\n    displayLabel: 'Subject',\n    summary: \"Subject, keyword, classification code, or key phrase describing the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/subject/\"\n  },\n  'contributors': {\n    category: 'recommended',\n    displayLabel: 'Contributors',\n    summary: \"The institution or person responsible for collecting, managing, distributing, or otherwise contributing to the development of the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/\",\n    subfields: {\n      'contributorType': {\n        displayLabel: 'Contributor Type',\n        description: 'The type of contributor of the resource.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#contributortype'\n      },\n      'nameType': {\n        displayLabel: 'Name Type',\n        description: 'The type of name for the contributor.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#contributornametype'\n      },\n      'nameIdentifier': {\n        displayLabel: 'Name Identifier',\n        description: 'Unique identifier for the contributor.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#contributornameidentifier'\n      },\n      'nameIdentifierScheme': {\n        displayLabel: 'Name Identifier Scheme',\n        description: 'The name of the name identifier scheme.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#a-nameidentifierscheme'\n      },\n      'affiliation': {\n        displayLabel: 'Affiliation',\n        description: 'The organizational or institutional affiliation of the contributor.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#a-affiliationidentifier'\n      },\n      'affiliationIdentifier': {\n        displayLabel: 'Affiliation Identifier',\n        description: 'Unique identifier for the affiliation of the contributor.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#a-affiliationidentifier'\n      },\n      'affiliationIdentifierScheme': {\n        displayLabel: 'Affiliation Identifier Scheme',\n        description: 'The name of the affiliation identifier scheme',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/contributor/#b-affiliationidentifierscheme'\n      }\n    }\n  },\n  'date': {\n    category: 'recommended',\n    displayLabel: 'Date',\n    summary: \"Different dates relevant to the work.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/date/\"\n  },\n  'language': {\n    category: 'recommended',\n    displayLabel: 'Language',\n    summary: \"The primary language of the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/language/\"\n  },\n  // Optional Fields\n  'alternateIdentifiers': {\n    category: 'optional',\n    displayLabel: 'Alternate Identifiers',\n    summary: \"An identifier or identifiers other than the primary Identifier applied to the resource being registered.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/alternateidentifier/\"\n  },\n  'relatedIdentifiers': {\n    category: 'optional',\n    displayLabel: 'Related Identifiers',\n    summary: \"Identifiers of related resources. These must be globally unique identifiers.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/relatedidentifier/\",\n    subfields: {\n      'relationType': {\n        displayLabel: 'Relation Type',\n        description: 'Description of the relationship between the resource and the related resource.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/relatedidentifier/#relationtype'\n      },\n      'relatedIdentifierType': {\n        displayLabel: 'Related IdentifierType',\n        description: 'The type of the Related Identifier.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/relatedidentifier/#a-relatedidentifiertype'\n      },\n      'resourceTypeGeneral': {\n        displayLabel: 'Resource Type General',\n        description: 'The general type of the related resource.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/relatedidentifier/#f-resourcetypegeneral'\n      }\n    }\n  },\n  'relatedItems': {\n    category: 'optional',\n    displayLabel: 'Related Items',\n    summary: \"Information about a resource related to the one being registered.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/relateditem/\"\n  },\n  'size': {\n    category: 'optional',\n    displayLabel: 'Size',\n    summary: \"Unstructured size information about the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/size/\"\n  },\n  'format': {\n    category: 'optional',\n    displayLabel: 'Format',\n    summary: \"Technical format of the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/format/\"\n  },\n  'version': {\n    category: 'optional',\n    displayLabel: 'Version',\n    summary: \"The version number of the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/version/\"\n  },\n  'rights': {\n    category: 'optional',\n    displayLabel: 'Rights',\n    summary: \"Information about rights held in and over the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/rights/\"\n  },\n  'description': {\n    category: 'optional',\n    displayLabel: 'Description',\n    summary: \"All additional information that does not fit in any of the other categories.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/description/\"\n  },\n  'geoLocations': {\n    category: 'optional',\n    displayLabel: 'Geographic Locations',\n    summary: \"Spatial region or named place where the data was gathered or about which the data is focused.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/geolocation/\"\n  },\n  'fundingReferences': {\n    category: 'optional',\n    displayLabel: 'Funding References',\n    summary: \"Information about financial support for the resource being registered.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/\",\n    subfields: {\n      'funderName': {\n        displayLabel: 'Funder Name',\n        description: 'Name of the funding provider.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#fundername'\n      },\n      'funderIdentifier': {\n        displayLabel: 'Funder Identifier',\n        description: 'Unique identifier for the funding provider.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#funderidentifier'\n      },\n      'funderIdentifierType': {\n        displayLabel: 'Funder Identifier Type',\n        description: 'Type of the funder identifier.',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#funderidentifiertype'\n      },\n      'awardNumber': {\n        displayLabel: 'Award Number',\n        description: 'The code assigned by the funder to a sponsored award (grant).',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#awardnumber'\n      },\n      'awardURI': {\n        displayLabel: 'Award URI',\n        description: 'The URI leading to a page provided by the funder for more information about the award (grant).',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#awarduri'\n      },\n      'awardTitle': {\n        displayLabel: 'Award Title',\n        description: 'The human readable title or name of the award (grant).',\n        url: 'https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/fundingreference/#awardtitle'\n      }\n    }\n  },\n  'subjects': {\n    category: 'recommended',\n    displayLabel: 'Subjects',\n    summary: \"Subject, keyword, classification code, or key phrase describing the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/subject/\"\n  },\n  'sizes': {\n    category: 'optional',\n    displayLabel: 'Sizes',\n    summary: \"Unstructured size information about the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/size/\"\n  },\n  'formats': {\n    category: 'optional',\n    displayLabel: 'Formats',\n    summary: \"Technical format of the resource.\",\n    url: \"https://datacite-metadata-schema.readthedocs.io/en/4.6/properties/format/\"\n  }\n};\n\nexport const RESOURCE_TYPES = {\n  Audiovisual: 'Audiovisual',\n  Book: 'Book',\n  BookChapter: 'Book Chapter',\n  Collection: 'Collection',\n  ComputationalNotebook: 'Computational Notebook',\n  ConferencePaper: 'Conference Paper',\n  ConferenceProceeding: 'Conference Proceeding',\n  DataPaper: 'Data Paper',\n  Dataset: 'Dataset',\n  Dissertation: 'Dissertation',\n  Event: 'Event',\n  Image: 'Image',\n  InteractiveResource: 'Interactive Resource',\n  Journal: 'Journal',\n  JournalArticle: 'Journal Article',\n  Model: 'Model',\n  OutputManagementPlan: 'Output Management Plan',\n  PeerReview: 'Peer Review',\n  PhysicalObject: 'Physical Object',\n  Preprint: 'Preprint',\n  Report: 'Report',\n  Service: 'Service',\n  Software: 'Software',\n  Sound: 'Sound',\n  Standard: 'Standard',\n  Text: 'Text',\n  Workflow: 'Workflow',\n  Other: 'Other'\n} as const;\n\nexport type ResourceType = keyof typeof RESOURCE_TYPES;\n\nexport const RESOURCE_TYPE_COLORS: Record<ResourceType, string> = {\n  Audiovisual: '#FF6B6B',      // Coral Red\n  Book: '#4ECDC4',            // Turquoise\n  BookChapter: '#45B7D1',     // Light Blue\n  Collection: '#96CEB4',      // Sage Green\n  ComputationalNotebook: '#9D94FF', // Periwinkle\n  ConferencePaper: '#FFD93D',  // Golden Yellow\n  ConferenceProceeding: '#F4D03F', // Darker Yellow\n  DataPaper: '#FF9F43',       // Orange\n  Dataset: '#4A90E2',         // Blue\n  Dissertation: '#D35400',    // Burnt Orange\n  Event: '#A569BD',           // Purple\n  Image: '#26A69A',           // Teal\n  InteractiveResource: '#FF5252', // Red\n  Journal: '#78909C',         // Blue Grey\n  JournalArticle: '#90A4AE',  // Lighter Blue Grey\n  Model: '#81C784',           // Green\n  OutputManagementPlan: '#7986CB', // Indigo\n  PeerReview: '#B39DDB',      // Light Purple\n  PhysicalObject: '#2ECC71',   // Emerald Green\n  Preprint: '#F06292',        // Pink\n  Report: '#95A5A6',          // Grey\n  Service: '#AED581',         // Light Green\n  Software: '#E74C3C',        // Red\n  Sound: '#FFA726',           // Light Orange\n  Standard: '#BA68C8',        // Purple\n  Text: '#F5D76E',           // Light Yellow\n  Workflow: '#4DB6AC',        // Light Teal\n  Other: '#BDC3C7'           // Light Grey\n};\n\nexport const getTextColor = (status: FieldCategory | string, completeness: number): string => {\n  if (status === 'optional') {\n    return 'text-gray-700';\n  }\n  return getCompletenessColor(completeness, true);\n};\n\nexport const getCategoryColor = (status: FieldCategory | string, completeness: number): string => {\n  if (status === 'optional') {\n    return 'bg-gray-500';\n  }\n  return getCompletenessColor(completeness, false);\n};\n\nexport const getCompletenessColor = (completeness: number, isText: boolean = false): string => {\n  if (completeness >= 0.7) return isText ? 'text-[#0E8C73]' : 'bg-[#0E8C73]';\n  if (completeness >= 0.4) return isText ? 'text-[#C65911]' : 'bg-[#C65911]';\n  return isText ? 'text-[#D14B1F]' : 'bg-[#D14B1F]';\n};\n\nexport function getResourceTypeColor(type: string): string {\n  return type in RESOURCE_TYPE_COLORS\n    ? RESOURCE_TYPE_COLORS[type as ResourceType]\n    : RESOURCE_TYPE_COLORS.Other;\n}\n\nexport function getFieldsByCategory(category: FieldCategory): string[] {\n  return Object.entries(METADATA_FIELDS)\n    .filter(([, metadata]) => metadata.category === category)\n    .map(([field]) => field);\n}\n\nexport function getFieldDescription(field: string): string {\n  return METADATA_FIELDS[field]?.summary || \"Additional metadata field for the resource\";\n}\n\nexport function getFieldUrl(field: string): string | undefined {\n  return METADATA_FIELDS[field]?.url;\n}\n\nexport function getFieldCategory(field: string): FieldCategory | undefined {\n  return METADATA_FIELDS[field]?.category;\n}\n\nexport function getFieldDisplayLabel(field: string): string {\n  // console.log('Getting display label for field:', field);\n  // console.log('Metadata exists:', !!METADATA_FIELDS[field]);\n\n  const metadata = METADATA_FIELDS[field];\n  return metadata?.displayLabel || field;\n}\n\nexport function getSubfieldDisplayLabel(field: string, subfield: string): string {\n  return METADATA_FIELDS[field]?.subfields?.[subfield]?.displayLabel ||\n    subfield.split(/(?=[A-Z])/).map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\n\nexport function getSubfieldDescription(field: string, subfield: string): string {\n  return METADATA_FIELDS[field]?.subfields?.[subfield]?.description ||\n    'Additional metadata subfield';\n}\n\nexport function getSubfieldUrl(field: string, subfield: string): string | undefined {\n  return METADATA_FIELDS[field]?.subfields?.[subfield]?.url;\n}\n\nexport function getValueDescription(fieldName: string, subfieldName: string, value: string): string | null {\n  const descriptions: Record<string, Record<string, Record<string, string>>> = {\n    creators: {\n      nameType: {\n        Personal: \"Individual person who contributed to the creation of the resource\",\n        Organizational: \"Organization that contributed to the creation of the resource\",\n        Unknown: \"Creator type could not be determined\"\n      }\n    },\n    titles: {\n      titleType: {\n        AlternativeTitle: \"A secondary or alternative title for the resource\",\n        Subtitle: \"A secondary, usually more detailed title\",\n        TranslatedTitle: \"The title translated into another language\",\n        Other: \"Other type of title not covered by the other categories\"\n      }\n    },\n    relatedIdentifiers: {\n      relationType: {\n        References: \"This resource references the target resource\",\n        IsReferencedBy: \"This resource is referenced by the target resource\",\n        IsSupplementTo: \"This resource supplements the target resource\",\n        IsSupplementedBy: \"This resource is supplemented by the target resource\",\n        IsCitedBy: \"This resource is cited by the target resource\",\n        Cites: \"This resource cites the target resource\"\n      }\n    }\n  };\n\n  return descriptions[fieldName]?.[subfieldName]?.[value] || null;\n}\n\nexport const FIELD_CATEGORIES: FieldCategory[] = ['mandatory', 'recommended', 'optional'];\n\nexport const CATEGORY_LABELS: Record<FieldCategory, string> = {\n  mandatory: 'Mandatory Fields',\n  recommended: 'Recommended Fields',\n  optional: 'Optional Fields'\n};\n\nexport const ERROR_MESSAGES = {\n  ORGANIZATION: {\n    LOAD_FAILED: 'Unable to load organization details. Please try again later or contact support if the problem persists.',\n    NOT_FOUND: 'Organization not found. Please check the URL and try again.',\n    TITLE: 'Unable to Load Organization'\n  },\n  REPOSITORY: {\n    LOAD_FAILED: (failedCount: number, successCount: number) =>\n      `Unable to load data for ${failedCount} ${failedCount === 1 ? 'repository' : 'repositories'\n      }. Displaying information for ${successCount} available ${successCount === 1 ? 'repository' : 'repositories'\n      }.`,\n    FAILED_ITEM: (id: string) => `Failed to load repository: ${id}`,\n    NOT_FOUND: (id: string) => `Repository \"${id}\" is not available. Showing organization overview instead.`,\n    TITLE: 'Some Repository Data Unavailable'\n  }\n} as const;\n\nexport const STATUS_COLORS = {\n  mandatory: {\n    text: 'text-[#0E8C73]',\n    bg: 'bg-[#0E8C73]',\n    provider: {\n      text: 'text-[#0E8C73]',\n      bg: 'bg-[#0E8C73]'\n    },\n    client: {\n      text: 'text-[#0D7A64]',\n      bg: 'bg-[#0D7A64]'\n    },\n    unknown: {\n      text: 'text-[#0E8C73]',\n      bg: 'bg-[#0E8C73]'\n    }\n  },\n  recommended: {\n    text: 'text-[#C65911]',\n    bg: 'bg-[#C65911]',\n    provider: {\n      text: 'text-[#C65911]',\n      bg: 'bg-[#C65911]'\n    },\n    client: {\n      text: 'text-[#B54E0F]',\n      bg: 'bg-[#B54E0F]'\n    },\n    unknown: {\n      text: 'text-[#C65911]',\n      bg: 'bg-[#C65911]'\n    }\n  },\n  optional: {\n    text: 'text-gray-700',\n    bg: 'bg-gray-500',\n    provider: {\n      text: 'text-gray-700',\n      bg: 'bg-gray-500'\n    },\n    client: {\n      text: 'text-gray-600',\n      bg: 'bg-gray-400'\n    },\n    unknown: {\n      text: 'text-gray-700',\n      bg: 'bg-gray-500'\n    }\n  }\n} as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBO,MAAM,kBAAiD;IAC5D,mBAAmB;IACnB,cAAc;QACZ,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,kBAAkB;gBAChB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;QACF;IACF;IACA,YAAY;QACV,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,YAAY;gBACV,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,kBAAkB;gBAChB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,wBAAwB;gBACtB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,eAAe;gBACb,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,yBAAyB;gBACvB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,+BAA+B;gBAC7B,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;QACF;IACF;IACA,UAAU;QACR,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,aAAa;QACX,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,mBAAmB;QACjB,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,qBAAqB;IACrB,gBAAgB;QACd,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,uBAAuB;gBACrB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;QACF;IACF;IACA,WAAW;QACT,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,gBAAgB;QACd,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,mBAAmB;gBACjB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,YAAY;gBACV,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,kBAAkB;gBAChB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,wBAAwB;gBACtB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,eAAe;gBACb,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,yBAAyB;gBACvB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,+BAA+B;gBAC7B,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;QACF;IACF;IACA,QAAQ;QACN,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,YAAY;QACV,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,kBAAkB;IAClB,wBAAwB;QACtB,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,sBAAsB;QACpB,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,gBAAgB;gBACd,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,yBAAyB;gBACvB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,uBAAuB;gBACrB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;QACF;IACF;IACA,gBAAgB;QACd,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,QAAQ;QACN,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,UAAU;QACR,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,WAAW;QACT,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,UAAU;QACR,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,eAAe;QACb,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,gBAAgB;QACd,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;IACP;IACA,qBAAqB;QACnB,UAAU;QACV,cAAc;QACd,SAAS;QACT,KAAK;QACL,WAAW;YACT,cAAc;gBACZ,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,oBAAoB;gBAClB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,wBAAwB;gBACtB,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,eAAe;gBACb,cAAc;gBACd,aAAa;gBACb,KAAK;YACP;YACA,YAAY;gBACV,c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"}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1040, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/metric-card.tsx"],"sourcesContent":["import {\n  Card,\n  CardContent,\n  CardHeader,\n} from './card';\nimport { Progress } from './progress';\nimport { Text } from '@/components/typography/typography';\nimport { cn } from '@/lib/utils';\nimport { FieldStatus } from '@/lib/types/api';\nimport { getTextColor, getCategoryColor } from '@/lib/constants';\n\ninterface MetricCardProps {\n  fieldStatus: FieldStatus;\n  completeness: number;\n  className?: string;\n}\n\nconst formatTitle = (status: FieldStatus) => \n  status.charAt(0).toUpperCase() + status.slice(1);\n\nexport function MetricCard({ \n  fieldStatus,\n  completeness,\n  className,\n}: MetricCardProps) {\n  const progress = completeness * 100;\n  const textColorClass = getTextColor(fieldStatus, completeness);\n  const bgColorClass = getCategoryColor(fieldStatus, completeness);\n  const title = formatTitle(fieldStatus);\n\n  return (\n    <Card \n      className={cn('overflow-hidden', className)}\n      role=\"region\"\n      aria-label={`Metric card for ${title}`}\n    >\n      <CardHeader className=\"flex flex-row items-center justify-center space-y-0 pb-2 border-b\">\n        <Text variant=\"h3\" className=\"text-center\">\n          {title}\n        </Text>\n      </CardHeader>\n      <CardContent className=\"pt-6\">\n        <Text \n          variant=\"h2\" \n          className={cn(\"text-center\", textColorClass)}\n          role=\"status\"\n          aria-label={`Value: ${completeness * 100}%`}\n        >\n          {(completeness * 100).toFixed(0)}%\n        </Text>\n        <div role=\"progressbar\" aria-valuenow={progress} aria-valuemin={0} aria-valuemax={100}>\n          <Progress\n            value={progress}\n            className=\"h-2 mt-4\"\n            indicatorClassName={bgColorClass}\n          />\n          <span className=\"sr-only\">{`Progress: ${progress}%`}</span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAKA;AACA;AACA;AAEA;;;;;;;AAQA,MAAM,cAAc,CAAC,SACnB,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC;AAEzC,SAAS,WAAW,EACzB,WAAW,EACX,YAAY,EACZ,SAAS,EACO;IAChB,MAAM,WAAW,eAAe;IAChC,MAAM,iBAAiB,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,aAAa;IACjD,MAAM,eAAe,CAAA,GAAA,uHAAA,CAAA,mBAAgB,AAAD,EAAE,aAAa;IACnD,MAAM,QAAQ,YAAY;IAE1B,qBACE,8OAAC,gIAAA,CAAA,OAAI;QACH,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QACjC,MAAK;QACL,cAAY,CAAC,gBAAgB,EAAE,OAAO;;0BAEtC,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,8IAAA,CAAA,OAAI;oBAAC,SAAQ;oBAAK,WAAU;8BAC1B;;;;;;;;;;;0BAGL,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC,8IAAA,CAAA,OAAI;wBACH,SAAQ;wBACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;wBAC7B,MAAK;wBACL,cAAY,CAAC,OAAO,EAAE,eAAe,IAAI,CAAC,CAAC;;4BAE1C,CAAC,eAAe,GAAG,EAAE,OAAO,CAAC;4BAAG;;;;;;;kCAEnC,8OAAC;wBAAI,MAAK;wBAAc,iBAAe;wBAAU,iBAAe;wBAAG,iBAAe;;0CAChF,8OAAC,oIAAA,CAAA,WAAQ;gCACP,OAAO;gCACP,WAAU;gCACV,oBAAoB;;;;;;0CAEtB,8OAAC;gCAAK,WAAU;0CAAW,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAK7D"}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/contexts/stats-view-context.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface StatsViewContextType {\n  selectedView: string;\n  setSelectedView: (view: string) => void;\n  availableViews: string[];\n  setAvailableViews: (views: string[]) => void;\n}\n\nconst StatsViewContext = createContext<StatsViewContextType>({ \n  selectedView: 'summary', \n  setSelectedView: () => {}, \n  availableViews: ['summary'], \n  setAvailableViews: () => {} \n});\n\nexport function StatsViewProvider({ children }: { children: ReactNode }) {\n  const [selectedView, setSelectedView] = useState<string>('summary');\n  const [availableViews, setAvailableViews] = useState<string[]>(['summary']);\n\n  return (\n    <StatsViewContext.Provider value={{\n      selectedView,\n      setSelectedView,\n      availableViews,\n      setAvailableViews,\n    }}>\n      {children}\n    </StatsViewContext.Provider>\n  );\n}\n\nexport function useStatsView() {\n  const context = useContext(StatsViewContext);\n  if (context === undefined) {\n    throw new Error('useStatsView must be used within a StatsViewProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AASA,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAwB;IAC3D,cAAc;IACd,iBAAiB,KAAO;IACxB,gBAAgB;QAAC;KAAU;IAC3B,mBAAmB,KAAO;AAC5B;AAEO,SAAS,kBAAkB,EAAE,QAAQ,EAA2B;IACrE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAAC;KAAU;IAE1E,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAChC;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 1189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/spinner.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\ninterface SpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\"\n  className?: string\n}\n\nexport function Spinner({ size = \"md\", className }: SpinnerProps) {\n  return (\n    <div\n      className={cn(\n        \"inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n        {\n          \"h-4 w-4\": size === \"sm\",\n          \"h-6 w-6\": size === \"md\",\n          \"h-8 w-8\": size === \"lg\",\n        },\n        \"text-datacite-dark-blue\",\n        className\n      )}\n      role=\"status\"\n      aria-label=\"Loading\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,QAAQ,EAAE,OAAO,IAAI,EAAE,SAAS,EAAgB;IAC9D,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;YACE,WAAW,SAAS;YACpB,WAAW,SAAS;YACpB,WAAW,SAAS;QACtB,GACA,2BACA;QAEF,MAAK;QACL,cAAW;kBAEX,cAAA,8OAAC;YAAK,WAAU;sBAAU;;;;;;;;;;;AAGhC"}},
    {"offset": {"line": 1225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1231, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/loading-overlay.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport { Spinner } from \"./spinner\"\n\ninterface LoadingOverlayProps {\n  isLoading: boolean\n  children: React.ReactNode\n  className?: string\n  message?: string\n}\n\nexport function LoadingOverlay({\n  isLoading,\n  children,\n  className,\n  message = \"Loading...\"\n}: LoadingOverlayProps) {\n  if (!isLoading) return <>{children}</>\n\n  return (\n    <div className=\"relative\">\n      {children}\n      <div\n        className={cn(\n          \"absolute inset-0 flex flex-col items-center justify-center\",\n          \"bg-white/80 backdrop-blur-sm transition-all duration-200\",\n          className\n        )}\n      >\n        <Spinner size=\"lg\" />\n        {message && (\n          <p className=\"mt-2 text-sm text-datacite-dark-blue\">{message}</p>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASO,SAAS,eAAe,EAC7B,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,YAAY,EACF;IACpB,IAAI,CAAC,WAAW,qBAAO;kBAAG;;IAE1B,qBACE,8OAAC;QAAI,WAAU;;YACZ;0BACD,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,4DACA;;kCAGF,8OAAC,mIAAA,CAAA,UAAO;wBAAC,MAAK;;;;;;oBACb,yBACC,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;;;;;;;;;;;;;AAK/D"}},
    {"offset": {"line": 1279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/common/entity-metrics.tsx"],"sourcesContent":["'use client';\n\nimport { Entity, FieldStatus } from '@/lib/types/api';\nimport { MetricCard } from '@/components/ui/metric-card';\nimport { useStatsView } from '@/contexts/stats-view-context';\nimport { LoadingOverlay } from '@/components/ui/loading-overlay';\nimport { Text } from '@/components/typography/typography';\n\ninterface EntityMetricsProps {\n  entity: Entity | undefined;\n}\n\nexport function EntityMetrics({ entity }: EntityMetricsProps) {\n  const { selectedView } = useStatsView();\n\n  if (!entity || !entity.stats) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <LoadingOverlay isLoading={true}>\n          <Text variant=\"body\">Loading metrics...</Text>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"h-[140px]\" />\n            <div className=\"h-[140px]\" />\n            <div className=\"h-[140px]\" />\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n\n  const statsView = selectedView === 'summary' \n    ? entity.stats.summary \n    : entity.stats.byResourceType?.resourceTypes?.[selectedView] ?? entity.stats.summary;\n\n  if (!statsView || !statsView.categories) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <LoadingOverlay isLoading={true}>\n          <Text variant=\"body\">Loading metrics...</Text>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"h-[140px]\" />\n            <div className=\"h-[140px]\" />\n            <div className=\"h-[140px]\" />\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n\n  const getCompletenessForStatus = (status: FieldStatus): number => {\n    return statsView.categories[status].completeness;\n  };\n\n  const mandatoryCompleteness = getCompletenessForStatus('mandatory');\n  const recommendedCompleteness = getCompletenessForStatus('recommended');\n  const optionalCompleteness = getCompletenessForStatus('optional');\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-3 max-w-[1420px] mx-auto px-4 py-6 text-[#2e4053]\">\n      <MetricCard\n        fieldStatus=\"mandatory\"\n        completeness={mandatoryCompleteness}\n        className=\"bg-white shadow-sm hover:shadow-md transition-shadow\"\n      />\n      <MetricCard\n        fieldStatus=\"recommended\"\n        completeness={recommendedCompleteness}\n        className=\"bg-white shadow-sm hover:shadow-md transition-shadow\"\n      />\n      <MetricCard\n        fieldStatus=\"optional\"\n        completeness={optionalCompleteness}\n        className=\"bg-white shadow-sm hover:shadow-md transition-shadow\"\n      />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAYO,SAAS,cAAc,EAAE,MAAM,EAAsB;IAC1D,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,eAAY,AAAD;IAEpC,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,EAAE;QAC5B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,8IAAA,CAAA,iBAAc;gBAAC,WAAW;;kCACzB,8OAAC,8IAAA,CAAA,OAAI;wBAAC,SAAQ;kCAAO;;;;;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,MAAM,YAAY,iBAAiB,YAC/B,OAAO,KAAK,CAAC,OAAO,GACpB,OAAO,KAAK,CAAC,cAAc,EAAE,eAAe,CAAC,aAAa,IAAI,OAAO,KAAK,CAAC,OAAO;IAEtF,IAAI,CAAC,aAAa,CAAC,UAAU,UAAU,EAAE;QACvC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,8IAAA,CAAA,iBAAc;gBAAC,WAAW;;kCACzB,8OAAC,8IAAA,CAAA,OAAI;wBAAC,SAAQ;kCAAO;;;;;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,MAAM,2BAA2B,CAAC;QAChC,OAAO,UAAU,UAAU,CAAC,OAAO,CAAC,YAAY;IAClD;IAEA,MAAM,wBAAwB,yBAAyB;IACvD,MAAM,0BAA0B,yBAAyB;IACzD,MAAM,uBAAuB,yBAAyB;IAEtD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,0IAAA,CAAA,aAAU;gBACT,aAAY;gBACZ,cAAc;gBACd,WAAU;;;;;;0BAEZ,8OAAC,0IAAA,CAAA,aAAU;gBACT,aAAY;gBACZ,cAAc;gBACd,WAAU;;;;;;0BAEZ,8OAAC,0IAAA,CAAA,aAAU;gBACT,aAAY;gBACZ,cAAc;gBACd,WAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1463, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cn } from \"@/lib/utils\"\nimport { Text } from \"@/components/typography/typography\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, children, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  >\n    <Text variant=\"small\" className=\"text-popover-foreground\">\n      {children}\n    </Text>\n  </TooltipPrimitive.Content>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AAEA;AACA;AAFA;AAHA;;;;;;AAOA,MAAM,kBAAkB,oKAAiB,QAAQ;AAEjD,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,oKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sWACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,8IAAA,CAAA,OAAI;YAAC,SAAQ;YAAQ,WAAU;sBAC7B;;;;;;;;;;;AAIP,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/config/chart-styles.ts"],"sourcesContent":["import { CSSProperties } from 'react';\n\ntype Breakpoints = {\n  sm: number;\n  lg: number;\n};\n\nconst breakpoints: Breakpoints = {\n  sm: 640,\n  lg: 1024,\n};\n\nexport const chartConfig = {\n  breakpoints,\n  barChart: {\n    layout: 'vertical' as const,\n    getMargins: (windowWidth: number) => ({\n      top: 12,\n      right: 8,\n      left: 8,\n      bottom: 12,\n      ...(windowWidth >= breakpoints.sm && {\n        top: 20,\n        right: 16,\n        left: 16,\n        bottom: 20,\n      }),\n      ...(windowWidth >= breakpoints.lg && {\n        top: 32,\n        right: 24,\n        left: 24,\n        bottom: 32,\n      }),\n    }),\n    accessibility: {\n      role: 'graphics-document',\n      ariaRoledescription: 'Bar chart showing resource type distribution',\n    }\n  },\n  xAxis: {\n    type: 'number' as const,\n    domain: [0, 100] as [number, number],\n    tickFormatter: (value: number) => `${value}%`,\n    ticks: [0, 20, 40, 60, 80, 100] as (number)[],\n    fontSize: 12,\n    tickMargin: 4,\n    accessibility: {\n      role: 'graphics-symbol',\n      ariaLabel: 'Percentage scale from 0% to 100%',\n    }\n  },\n  yAxis: {\n    type: 'category' as const,\n    dataKey: 'name',\n    hide: true,\n  },\n  legend: {\n    layout: 'horizontal' as const,\n    align: 'left' as const,\n    verticalAlign: 'bottom' as const,\n    wrapperStyle: {\n      width: '100%',\n      maxWidth: 'calc(100% - 16px)',\n      fontSize: '0.75rem',\n      lineHeight: '1rem',\n      marginLeft: '8px'\n    } as CSSProperties\n  }\n} as const;\n"],"names":[],"mappings":";;;AAOA,MAAM,cAA2B;IAC/B,IAAI;IACJ,IAAI;AACN;AAEO,MAAM,cAAc;IACzB;IACA,UAAU;QACR,QAAQ;QACR,YAAY,CAAC,cAAwB,CAAC;gBACpC,KAAK;gBACL,OAAO;gBACP,MAAM;gBACN,QAAQ;gBACR,GAAI,eAAe,YAAY,EAAE,IAAI;oBACnC,KAAK;oBACL,OAAO;oBACP,MAAM;oBACN,QAAQ;gBACV,CAAC;gBACD,GAAI,eAAe,YAAY,EAAE,IAAI;oBACnC,KAAK;oBACL,OAAO;oBACP,MAAM;oBACN,QAAQ;gBACV,CAAC;YACH,CAAC;QACD,eAAe;YACb,MAAM;YACN,qBAAqB;QACvB;IACF;IACA,OAAO;QACL,MAAM;QACN,QAAQ;YAAC;YAAG;SAAI;QAChB,eAAe,CAAC,QAAkB,GAAG,MAAM,CAAC,CAAC;QAC7C,OAAO;YAAC;YAAG;YAAI;YAAI;YAAI;YAAI;SAAI;QAC/B,UAAU;QACV,YAAY;QACZ,eAAe;YACb,MAAM;YACN,WAAW;QACb;IACF;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,MAAM;IACR;IACA,QAAQ;QACN,QAAQ;QACR,OAAO;QACP,eAAe;QACf,cAAc;YACZ,OAAO;YACP,UAAU;YACV,UAAU;YACV,YAAY;YACZ,YAAY;QACd;IACF;AACF"}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/layout/container.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface ContainerProps {\n  variant: 'narrow' | 'wide' | 'full';\n  children: ReactNode;\n  className?: string;\n}\n\nconst containerVariants = {\n  narrow: 'max-w-2xl',\n  wide: 'max-w-5xl',\n  full: 'max-w-full'\n};\n\nexport function Container({ variant, children, className }: ContainerProps) {\n  return (\n    <div className={cn(\n      'container mx-auto px-3 sm:px-4 lg:px-5 py-2 sm:py-3 lg:py-4', \n      containerVariants[variant],\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAQA,MAAM,oBAAoB;IACxB,QAAQ;IACR,MAAM;IACN,MAAM;AACR;AAEO,SAAS,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAkB;IACxE,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACf,+DACA,iBAAiB,CAAC,QAAQ,EAC1B;kBAEC;;;;;;AAGP"}},
    {"offset": {"line": 1612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1618, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/layout/stack.tsx"],"sourcesContent":["import { ReactNode, ElementType } from 'react';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface StackProps {\n  spacing: 'sm' | 'md' | 'lg';\n  children: ReactNode;\n  className?: string;\n  as?: ElementType;\n}\n\nconst stackSpacing = {\n  sm: 'space-y-3 sm:space-y-4',\n  md: 'space-y-4 sm:space-y-6',\n  lg: 'space-y-6 sm:space-y-8'\n};\n\nexport function Stack({ \n  spacing, \n  children, \n  className,\n  as: Component = 'div'\n}: StackProps) {\n  const Comp = Component as ElementType;\n  return (\n    <Comp className={cn(stackSpacing[spacing], className)}>\n      {children}\n    </Comp>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;;;AASA,MAAM,eAAe;IACnB,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEO,SAAS,MAAM,EACpB,OAAO,EACP,QAAQ,EACR,SAAS,EACT,IAAI,YAAY,KAAK,EACV;IACX,MAAM,OAAO;IACb,qBACE,8OAAC;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,CAAC,QAAQ,EAAE;kBACxC;;;;;;AAGP"}},
    {"offset": {"line": 1641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1647, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/common/resource-type-stats.tsx"],"sourcesContent":["'use client';\n\nimport { Provider, Client, Stats, getResourceTypeStats, ResourceType } from '@/lib/types/api';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useStatsView } from '@/contexts/stats-view-context';\nimport { Info } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, Legend } from 'recharts';\nimport { getResourceTypeColor } from '@/lib/constants';\nimport { chartConfig } from '@/config/chart-styles';\nimport { Container } from '@/components/layout/container';\nimport { Stack } from '@/components/layout/stack';\n\ninterface ResourceTypeStatsProps {\n  provider: Provider | Client;\n}\n\ninterface ResourceTypeStat {\n  type: ResourceType;\n  count: number;\n}\n\ninterface ChartDataItem {\n  name: string;\n  [key: string]: number | string | undefined;\n  cumulative?: number;\n}\n\ninterface SelectionIndicatorProps {\n  x: number;\n  y: number;\n  width: number;\n  selectedType: ResourceType;\n  type: ResourceType;\n}\n\nconst calculatePercentage = (count: number, total: number): number => {\n  if (total === 0) return 0;\n  return Math.round((count / total) * 1000) / 10;\n};\n\nconst camelCaseToSpaced = (text: string): string => {\n  return text.replace(/([A-Z])/g, ' $1').trim();\n};\n\nconst MAX_TEXT_WIDTH = 100;\nconst LINE_HEIGHT = 12;\nconst TOP_MARGIN = 60;\n\nconst wrapText = (text: string, maxWidth: number): string[] => {\n  const words = text.split(' ');\n  const lines: string[] = [];\n  let currentLine = words[0];\n\n  for (let i = 1; i < words.length; i++) {\n    const word = words[i];\n    const testLine = `${currentLine} ${word}`;\n    const testWidth = testLine.length * 6; \n\n    if (testWidth < maxWidth) {\n      currentLine = testLine;\n    } else {\n      lines.push(currentLine);\n      currentLine = word;\n    }\n  }\n  lines.push(currentLine);\n  return lines;\n};\n\nconst SelectionIndicator = ({ \n  x, \n  y, \n  width, \n  selectedType,\n  type\n}: SelectionIndicatorProps) => {\n  const { selectedView } = useStatsView();\n  if (!selectedType || selectedView === 'summary' || selectedType.toLowerCase() !== type.toLowerCase()) return null;\n\n  const centerX = x + (width / 2);\n  const wrappedText = wrapText(camelCaseToSpaced(type), MAX_TEXT_WIDTH);\n  const totalHeight = wrappedText.length * LINE_HEIGHT;\n  const startY = y - totalHeight - 30;\n\n  return (\n    <g>\n      <text\n        x={centerX}\n        y={startY}\n        textAnchor=\"middle\"\n        className=\"text-xs fill-current\"\n      >\n        {wrappedText.map((line, index) => (\n          <tspan\n            key={index}\n            x={centerX}\n            dy={index === 0 ? 0 : LINE_HEIGHT}\n            className=\"font-medium\"\n          >\n            {line}\n          </tspan>\n        ))}\n      </text>\n      <line\n        x1={centerX}\n        y1={y - 20}\n        x2={centerX}\n        y2={y - 5}\n        stroke=\"currentColor\"\n        strokeWidth=\"1\"\n        strokeDasharray=\"2,2\"\n      />\n    </g>\n  );\n};\n\nexport function ResourceTypeStats({ provider }: ResourceTypeStatsProps) {\n  const { selectedView } = useStatsView();\n  const stats: Stats | undefined = provider.stats;\n\n  if (!stats?.byResourceType?.resourceTypes) {\n    return null;\n  }\n\n  const statsView = selectedView === 'summary' \n    ? stats.summary \n    : getResourceTypeStats(stats, selectedView);\n\n  if (!statsView) {\n    return null;\n  }\n\n  const resourceTypeStats: ResourceTypeStat[] = Object.entries(stats.byResourceType.resourceTypes)\n    .map(([type, typeStats]) => ({\n      type: type as ResourceType,\n      count: typeStats.count\n    }))\n    .filter(({ count }) => count > 0)\n    .sort((a, b) => b.count - a.count);\n\n  if (resourceTypeStats.length === 0) {\n    return null;\n  }\n\n  const totalCount = resourceTypeStats.reduce((sum, { count }) => sum + count, 0);\n\n  const chartData: ChartDataItem[] = (() => {\n    let remainingPercentage = 100;\n    let cumulative = 0;\n    \n    const result = [{\n      name: 'Distribution',\n      cumulative: 0,\n      ...resourceTypeStats.reduce<Record<string, number>>((acc, { type, count }, index) => {\n        const percentage = index === resourceTypeStats.length - 1\n          ? remainingPercentage\n          : calculatePercentage(count, totalCount);\n        \n        remainingPercentage -= percentage;\n        cumulative += percentage;\n        \n        return {\n          ...acc,\n          [type]: percentage,\n          [`${type}Cumulative`]: cumulative\n        };\n      }, {})\n    }];\n\n    return result;\n  })();\n\n  const getDisplayPercentage = (): number => {\n    if (selectedView === 'summary') {\n      return chartData[0][resourceTypeStats[0]?.type] as number || 0;\n    }\n    const selectedType = selectedView.charAt(0).toUpperCase() + selectedView.slice(1) as ResourceType;\n    return chartData[0][selectedType] as number || 0;\n  };\n\n  const displayPercentage = getDisplayPercentage();\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader className=\"space-y-4\">\n        <Stack spacing=\"sm\">\n          <div className=\"flex items-center gap-2\">\n            <CardTitle className=\"text-2xl sm:text-3xl\">Resource Type Distribution</CardTitle>\n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger aria-label=\"Information about resource types\">\n                  <Info className=\"h-4 w-4\" />\n                </TooltipTrigger>\n                <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                  Distribution of different resource types for the organization or repository\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n          <Container variant=\"full\" className=\"px-0\">\n            <div className=\"flex flex-wrap items-center gap-2 text-xs sm:text-sm text-muted-foreground\">\n              {selectedView === 'summary' ? (\n                <>\n                  <span>All Resource Types</span>\n                  <span className=\"text-muted-foreground\">•</span>\n                  <span>Most common: </span>\n                  <span className=\"font-medium text-foreground\">\n                    {camelCaseToSpaced(resourceTypeStats[0]?.type)}\n                  </span>\n                  <span className=\"text-muted-foreground\">•</span>\n                  <span>{displayPercentage.toFixed(0)}% of total</span>\n                </>\n              ) : (\n                <>\n                  <span>Current Resource Type View: </span>\n                  <span className=\"font-medium text-foreground\">\n                    {camelCaseToSpaced(selectedView.charAt(0).toUpperCase() + selectedView.slice(1))}\n                  </span>\n                  <span className=\"text-muted-foreground\">•</span>\n                  <span>{displayPercentage.toFixed(0)}% of total</span>\n                </>\n              )}\n            </div>\n          </Container>\n        </Stack>\n      </CardHeader>\n      <CardContent>\n        <Container variant=\"full\" className=\"px-0\">\n          <div \n            className=\"relative h-64 sm:h-72 lg:h-96 min-w-[320px]\"\n            role=\"figure\"\n            aria-label={`Resource type distribution chart showing ${selectedView === 'summary' \n              ? 'all resource types' \n              : `${camelCaseToSpaced(selectedView)} at ${displayPercentage.toFixed(0)}%`}`}\n          >\n            <div className=\"absolute inset-0 overflow-x-auto overflow-y-hidden\">\n              <div className=\"min-w-[800px] h-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    layout={chartConfig.barChart.layout}\n                    data={chartData}\n                    margin={{\n                      top: TOP_MARGIN,\n                      right: 60,\n                      bottom: 20,\n                      left: 60\n                    }}\n                    {...chartConfig.barChart.accessibility}\n                  >\n                    <XAxis \n                      {...chartConfig.xAxis}\n                      {...chartConfig.xAxis.accessibility}\n                    />\n                    <YAxis {...chartConfig.yAxis} />\n                    <Legend \n                      {...chartConfig.legend}\n                      formatter={(value: string) => (\n                        <span className=\"text-foreground px-1 text-xs sm:text-sm\">{camelCaseToSpaced(value)}</span>\n                      )}\n                    />\n                    {resourceTypeStats.map(({ type, count }) => (\n                      <Bar\n                        key={type}\n                        dataKey={type}\n                        stackId=\"1\"\n                        fill={getResourceTypeColor(type)}\n                        label={\n                          <SelectionIndicator \n                            selectedType={selectedView as ResourceType} \n                            type={type}\n                            x={0}\n                            y={0}\n                            width={0}\n                          />\n                        }\n                        role=\"graphics-symbol\"\n                        aria-label={`${camelCaseToSpaced(type)}: ${calculatePercentage(count, totalCount).toFixed(1)}% (${count.toLocaleString()} items)`}\n                      />\n                    ))}\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n          <div \n            className=\"mt-4 sm:mt-6 text-xs sm:text-sm text-muted-foreground\"\n            aria-live=\"polite\"\n            role=\"status\"\n          >\n            Total items: {totalCount.toLocaleString()}\n          </div>\n        </Container>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2119, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/hooks/use-container-width.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useContainerWidth() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(0);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        setWidth(entry.contentRect.width);\n      }\n    });\n\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return { containerRef, width };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS;IACd,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO;QACtC,IAAI,CAAC,WAAW;QAEhB,MAAM,iBAAiB,IAAI,eAAe,CAAA;YACxC,KAAK,MAAM,SAAS,QAAS;gBAC3B,SAAS,MAAM,WAAW,CAAC,KAAK;YAClC;QACF;QAEA,eAAe,OAAO,CAAC;QAEvB,OAAO;YACL,eAAe,UAAU;QAC3B;IACF,GAAG,EAAE;IAEL,OAAO;QAAE;QAAc;IAAM;AAC/B"}},
    {"offset": {"line": 2145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/common/field-stats.tsx"],"sourcesContent":["import { SubfieldInfo, FieldInfo, Stats, StatsView } from '@/lib/types/api';\nimport { FieldCategory } from '@/lib/constants';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { cn } from '@/lib/utils';\nimport { Info, ChevronDown } from 'lucide-react';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { formatCompleteness } from '@/lib/utils';\nimport {\n  getFieldDescription,\n  getFieldUrl,\n  getFieldDisplayLabel,\n  getSubfieldDescription,\n  getSubfieldDisplayLabel,\n  getSubfieldUrl,\n  getTextColor,\n  getCategoryColor\n} from '@/lib/constants';\nimport { useState } from 'react';\nimport { useStatsView } from '@/contexts/stats-view-context';\nimport { Container } from '@/components/layout/container';\nimport { Stack } from '@/components/layout/stack';\nimport { Text } from '@/components/typography/typography';\nimport { useContainerWidth } from '@/lib/hooks/use-container-width';\n\ntype ExpandedSubfields = Record<`${string}-${string}`, boolean>;\n\nexport enum ViewMode {\n  Summary = 'summary',\n  Detailed = 'detailed'\n}\n\ninterface GroupedFields {\n  [key: string]: {\n    [field: string]: FieldInfo;\n  };\n}\n\ninterface DetailedFieldStatsProps {\n  stats: StatsView;\n  figshare?: StatsView;\n}\n\ninterface SummaryFieldStatsProps {\n  readonly groupedFields: GroupedFields;\n  readonly categories: readonly FieldCategory[];\n}\n\ninterface FieldStatsProps {\n  readonly stats: Stats;\n  readonly figshareStats?: Stats | undefined;\n  readonly viewMode: ViewMode;\n  readonly onToggleView?: () => void;\n}\n\nconst getCategoryTitle = (category: string): string => {\n  switch (category) {\n    case 'mandatory':\n      return 'Mandatory';\n    case 'recommended':\n      return 'Recommended';\n    case 'optional':\n      return 'Optional';\n    default:\n      return category;\n  }\n};\n\n\nconst DetailedFieldStats = ({ stats, figshare }: DetailedFieldStatsProps) => {\n  const fields = Object.entries(stats?.fields || {})\n    .sort(([a], [b]) => a.localeCompare(b));\n\n  const figshareFields = Object.entries(figshare?.fields || {})\n    .sort(([a], [b]) => a.localeCompare(b));\n\n  const [expandedSubfields, setExpandedSubfields] = useState<ExpandedSubfields>({});\n  const { containerRef, width } = useContainerWidth();\n  const isNarrow = width > 0 && width < 1024; // Threshold for switching layouts\n\n  const toggleSubfield = (fieldName: string, subfieldName: string): void => {\n    const key = `${fieldName}-${subfieldName}` as const;\n    setExpandedSubfields(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  const isSubfieldExpanded = (fieldName: string, subfieldName: string): boolean => {\n    const key = `${fieldName}-${subfieldName}` as const;\n    return expandedSubfields[key] ?? false;\n  };\n\n  const isValidSubfield = (entry: [string, unknown]): entry is [string, SubfieldInfo] => {\n    const [, subfieldData] = entry;\n    return subfieldData !== null &&\n      typeof subfieldData === 'object' &&\n      'count' in subfieldData &&\n      typeof subfieldData.count === 'number' &&\n      subfieldData.count > 0;\n  };\n\n  return (\n    <Stack spacing=\"lg\" className=\"w-full\">\n      <div>\n        <Text variant=\"h2\" id=\"fields-heading\">Fields</Text>\n        <div className=\"border-t-2 border-gray-300 my-4\" role=\"separator\"></div>\n      </div>\n      <div className=\"flex flex-row\">\n        <div style={{ width: \"50%\" }}>\n\n          <Text variant=\"h2\" id=\"fields-heading\" className=\"bg-blue-100 text-center mb-5 p-5 border border-solid border-black-100\">DataCite record</Text>\n          <Stack spacing=\"md\">\n            {fields.map(([fieldName, fieldData]) => {\n              const completeness = fieldData.completeness;\n              const hasSubfields = fieldData.subfields && Object.keys(fieldData.subfields).length > 0;\n              return (\n                <div key={fieldName}>\n                  {fieldName ? (\n                    <Card key={fieldName} className=\"overflow-hidden\" role=\"region\" aria-labelledby={`field-${fieldName}`}>\n                      <CardContent className=\"p-6\">\n                        <div\n                          ref={containerRef}\n                          className={cn(\n                            \"flex flex-col gap-4\",\n                            !isNarrow && \"grid grid-cols-[minmax(250px,3fr),1fr,1fr,1fr,1fr,1.2fr] gap-4 sm:gap-8\"\n                          )}\n                        >\n                          {/* Mobile Header - Always Visible */}\n                          <div className=\"flex items-center justify-between flex-col items-start\">\n                            <div className=\"flex items-center gap-4\">\n                              <div className=\"flex items-center gap-2\">\n                                <Text\n                                  variant=\"h3\"\n                                  className=\"truncate\"\n                                  title={getFieldDisplayLabel(fieldName)}\n                                  id={`field-${fieldName}`}\n                                >\n                                  {getFieldDisplayLabel(fieldName)}\n                                </Text>\n                                <TooltipProvider>\n                                  <Tooltip>\n                                    <TooltipTrigger asChild>\n                                      <button\n                                        className=\"inline-flex flex-shrink-0 p-1 hover:bg-gray-100 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                        aria-label={`Information about ${getFieldDisplayLabel(fieldName)}`}\n                                      >\n                                        <Info className=\"h-4 w-4 text-gray-700\" />\n                                      </button>\n                                    </TooltipTrigger>\n                                    <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                                      {getFieldDescription(fieldName)}\n                                      <a\n                                        href={getFieldUrl(fieldName)}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"text-blue-700 hover:underline block mt-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                        aria-label={`Learn more about ${getFieldDisplayLabel(fieldName)} (opens in new tab)`}\n                                      >\n                                        Learn more\n                                      </a>\n                                    </TooltipContent>\n                                  </Tooltip>\n                                </TooltipProvider>\n                              </div>\n                            </div>\n                            {isNarrow && (\n                              <div className=\"flex items-center gap-2\">\n                                <div className=\"space-y-2\">\n                                  <Text variant=\"small\" className=\"text-gray-700\">Completeness</Text>\n                                  <div className=\"flex items-center gap-2\">\n                                    <Progress\n                                      value={completeness * 100}\n                                      className=\"h-2 w-24 bg-primary/20\"\n                                      indicatorClassName={getCategoryColor(fieldData.fieldStatus, completeness)}\n                                    />\n                                    <Text\n                                      variant=\"body\"\n                                      className={cn(\"font-medium\", getTextColor(fieldData.fieldStatus, completeness))}\n                                    >\n                                      {formatCompleteness(completeness)}\n                                    </Text>\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n\n                          <div className=\"border-t-2 border-gray-300 my-4\"></div>\n\n                          {/* Stats Grid */}\n                          <div className={cn(\n                            \"grid gap-4\",\n                            isNarrow ? \"col-span-2\" : \"contents\"\n                          )}>\n                            {/* Stats Grid */}\n                            <div>\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Category</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium capitalize\"\n                                  title={getCategoryTitle(fieldData.fieldStatus)}\n                                  aria-label={`Field category: ${getCategoryTitle(fieldData.fieldStatus)}`}\n                                >\n                                  {getCategoryTitle(fieldData.fieldStatus) ? getCategoryTitle(fieldData.fieldStatus) : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Present</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData.count.toLocaleString()}\n                                  aria-label={`${fieldData.count.toLocaleString()} records present`}\n                                >\n                                  {fieldData.count.toLocaleString() ? fieldData.count.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Missing</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData.missing.toLocaleString()}\n                                  aria-label={`${fieldData.missing.toLocaleString()} missing instances`}\n                                >\n                                  {fieldData.missing.toLocaleString() ? fieldData.missing.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Instances</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData?.instances?.toLocaleString()}\n                                  aria-label={`${fieldData?.instances?.toLocaleString()} instances`}\n                                >\n                                  {fieldData?.instances?.toLocaleString() ? fieldData?.instances?.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Subfields Section */}\n                          {hasSubfields && fieldData.subfields && Object.values(fieldData.subfields)?.some(subfield => subfield.count > 0) ? (\n                            <div className={cn(\n                              \"space-y-2\",\n                              isNarrow ? \"col-span-full\" : \"col-span-6\"\n                            )}>\n                              <button\n                                onClick={() => toggleSubfield(fieldName, 'all')}\n                                className=\"flex items-center justify-between p-2 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors w-auto\"\n                                aria-expanded={isSubfieldExpanded(fieldName, 'all')}\n                                aria-controls={`subfields-${fieldName}`}\n                              >\n                                <Text variant=\"body\" className=\"font-medium\">Subfields</Text>\n                                <ChevronDown\n                                  className={cn(\n                                    \"h-4 w-4 text-gray-500 transition-transform ml-2\",\n                                    isSubfieldExpanded(fieldName, 'all') ? \"rotate-180\" : \"\"\n                                  )}\n                                />\n                              </button>\n\n                              {isSubfieldExpanded(fieldName, 'all') && (\n                                <div\n                                  id={`subfields-${fieldName}`}\n                                  className=\"space-y-4 mt-2\"\n                                >\n                                  {Object.entries(fieldData.subfields)\n                                    .filter(isValidSubfield)\n                                    .sort(([a], [b]) => a.localeCompare(b))\n                                    .map(([subfieldName, subfieldData]) => {\n                                      const isExpanded = isSubfieldExpanded(fieldName, subfieldName);\n                                      return (\n                                        <div\n                                          key={subfieldName}\n                                          className={cn(\n                                            \"rounded-lg border border-gray-200 overflow-hidden\",\n                                            isNarrow ? \"\" : \"ml-6\"\n                                          )}\n                                        >\n                                          <button\n                                            onClick={() => toggleSubfield(fieldName, subfieldName)}\n                                            className=\"w-full px-4 py-3 flex items-center justify-between bg-gray-50 hover:bg-gray-100 transition-colors\"\n                                            aria-expanded={isExpanded}\n                                            aria-controls={`subfield-content-${fieldName}-${subfieldName}`}\n                                          >\n                                            <div className=\"flex items-center gap-2\">\n                                              <Text variant=\"body\" className=\"font-medium\">\n                                                {/**TESTING */}\n                                                {getSubfieldDisplayLabel(fieldName, subfieldName)}\n                                              </Text>\n                                              <TooltipProvider>\n                                                <Tooltip>\n                                                  <TooltipTrigger asChild>\n                                                    <span className=\"inline-flex p-1 hover:bg-gray-200 rounded-full transition-colors\">\n                                                      <Info className=\"h-4 w-4 text-gray-700\" />\n                                                    </span>\n                                                  </TooltipTrigger>\n                                                  <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                                                    {getSubfieldDescription(fieldName, subfieldName)}\n                                                    <a\n                                                      href={getSubfieldUrl(fieldName, subfieldName)}\n                                                      target=\"_blank\"\n                                                      rel=\"noopener noreferrer\"\n                                                      className=\"text-blue-700 hover:underline block mt-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                                      aria-label={`Learn more about ${getSubfieldDisplayLabel(fieldName, subfieldName)} (opens in new tab)`}\n                                                    >\n                                                      Learn more\n                                                    </a>\n                                                  </TooltipContent>\n                                                </Tooltip>\n                                              </TooltipProvider>\n                                            </div>\n                                            <div className=\"flex items-center gap-4\">\n                                              <div className=\"flex items-center gap-2\">\n                                                <Progress\n                                                  value={subfieldData.completeness * 100}\n                                                  className=\"h-2 w-24 bg-[#EBF0F5]\"\n                                                  indicatorClassName=\"bg-gray-900\"\n                                                />\n                                                <Text\n                                                  variant=\"body\"\n                                                  className=\"font-medium\"\n                                                >\n                                                  {formatCompleteness(subfieldData.completeness)}\n                                                </Text>\n                                              </div>\n                                              <ChevronDown\n                                                className={cn(\n                                                  \"h-4 w-4 text-gray-500 transition-transform\",\n                                                  isExpanded ? \"rotate-180\" : \"\"\n                                                )}\n                                              />\n                                            </div>\n                                          </button>\n\n                                          {isExpanded && (\n                                            <div\n                                              id={`subfield-content-${fieldName}-${subfieldName}`}\n                                              className=\"px-4 py-3\"\n                                            >\n                                              <div className=\"grid grid-cols-3 gap-4\">\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Present</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.count.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Missing-{getSubfieldDisplayLabel(fieldName, subfieldName)}</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.missing.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Instances</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.instances.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                              </div>\n                                              {subfieldData.values && Object.keys(subfieldData.values).length > 0 && (\n                                                <>\n                                                  <div className=\"border-t border-gray-200 my-4\"></div>\n                                                  <div className=\"space-y-2\">\n                                                    {Object.entries(subfieldData.values)\n                                                      .filter(entry => entry[1] > 0)\n                                                      .sort((a, b) => b[1] - a[1])\n                                                      .map(([valueKey, valueCount]) => {\n                                                        const percentage = (valueCount / subfieldData.instances) * 100;\n                                                        return (\n                                                          <div key={valueKey} className=\"space-y-1\">\n                                                            <div className=\"flex justify-between items-center\">\n                                                              <Text variant=\"body\" className=\"font-medium\">\n                                                                {valueKey}\n                                                              </Text>\n                                                              <Text variant=\"body\" className=\"text-gray-600\">\n                                                                {formatCompleteness(percentage / 100)}\n                                                              </Text>\n                                                            </div>\n                                                            <div className=\"relative\">\n                                                              <Progress\n                                                                value={percentage}\n                                                                className=\"h-2 bg-[#EBF0F5]\"\n                                                                indicatorClassName=\"bg-gray-900\"\n                                                              />\n                                                              <div className=\"flex justify-between items-center mt-1\">\n                                                                <Text variant=\"small\" className=\"text-gray-600\">\n                                                                  log scale\n                                                                </Text>\n                                                                <Text variant=\"small\" className=\"text-gray-600 tabular-nums\">\n                                                                  {valueCount.toLocaleString()} / {subfieldData.instances.toLocaleString()}\n                                                                </Text>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        );\n                                                      })}\n                                                  </div>\n                                                </>\n                                              )}\n                                            </div>\n                                          )}\n                                        </div>\n                                      );\n                                    })}\n                                </div>\n                              )}\n                            </div>\n                          ) : (\n                            <div style={{ height: \"46px\" }}></div>\n\n                          )}\n\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ) : (\n                    <Card>\n                      <h2>MISSING</h2>\n                    </Card>\n                  )}\n\n                </div>\n              );\n            })}\n          </Stack>\n\n        </div>\n        <div style={{ width: \"50%\" }}>\n          <Text variant=\"h2\" id=\"fields-heading\" className=\"bg-red-100 text-center mb-5 p-5 border border-solid border-black-100\">Figshare record</Text>\n          <Stack spacing=\"md\">\n            {figshareFields.map(([fieldName, fieldData]) => {\n              const completeness = fieldData.completeness;\n              const hasSubfields = fieldData.subfields && Object.keys(fieldData.subfields).length > 0;\n              return (\n                <div key={fieldName}>\n                  {fieldName ? (\n                    <Card key={fieldName} className=\"overflow-hidden\" role=\"region\" aria-labelledby={`field-${fieldName}`}>\n                      <CardContent className=\"p-6\">\n                        <div\n                          ref={containerRef}\n                          className={cn(\n                            \"flex flex-col gap-4\",\n                            !isNarrow && \"grid grid-cols-[minmax(250px,3fr),1fr,1fr,1fr,1fr,1.2fr] gap-4 sm:gap-8\"\n                          )}\n                        >\n                          {/* Mobile Header - Always Visible */}\n                          <div className=\"flex items-center justify-between flex-col items-start\">\n                            <div className=\"flex items-center gap-4\">\n                              <div className=\"flex items-center gap-2\">\n                                <Text\n                                  variant=\"h3\"\n                                  className=\"truncate\"\n                                  title={getFieldDisplayLabel(fieldName)}\n                                  id={`field-${fieldName}`}\n                                >\n                                  {getFieldDisplayLabel(fieldName)}\n                                </Text>\n                                <TooltipProvider>\n                                  <Tooltip>\n                                    <TooltipTrigger asChild>\n                                      <button\n                                        className=\"inline-flex flex-shrink-0 p-1 hover:bg-gray-100 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                        aria-label={`Information about ${getFieldDisplayLabel(fieldName)}`}\n                                      >\n                                        <Info className=\"h-4 w-4 text-gray-700\" />\n                                      </button>\n                                    </TooltipTrigger>\n                                    <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                                      {getFieldDescription(fieldName)}\n                                      <a\n                                        href={getFieldUrl(fieldName)}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"text-blue-700 hover:underline block mt-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                        aria-label={`Learn more about ${getFieldDisplayLabel(fieldName)} (opens in new tab)`}\n                                      >\n                                        Learn more\n                                      </a>\n                                    </TooltipContent>\n                                  </Tooltip>\n                                </TooltipProvider>\n                              </div>\n                            </div>\n                            {isNarrow && (\n                              <div className=\"flex items-center gap-2\">\n                                <div className=\"space-y-2\">\n                                  <Text variant=\"small\" className=\"text-gray-700\">Completeness</Text>\n                                  <div className=\"flex items-center gap-2\">\n                                    <Progress\n                                      value={completeness * 100}\n                                      className=\"h-2 w-24 bg-primary/20\"\n                                      indicatorClassName={getCategoryColor(fieldData.fieldStatus, completeness)}\n                                    />\n                                    <Text\n                                      variant=\"body\"\n                                      className={cn(\"font-medium\", getTextColor(fieldData.fieldStatus, completeness))}\n                                    >\n                                      {formatCompleteness(completeness)}\n                                    </Text>\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n\n                          <div className=\"border-t-2 border-gray-300 my-4\"></div>\n\n                          {/* Stats Grid */}\n                          <div className={cn(\n                            \"grid gap-4\",\n                            isNarrow ? \"col-span-2\" : \"contents\"\n                          )}>\n                            {/* Stats Grid */}\n                            <div>\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Category</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium capitalize\"\n                                  title={getCategoryTitle(fieldData.fieldStatus)}\n                                  aria-label={`Field category: ${getCategoryTitle(fieldData.fieldStatus)}`}\n                                >\n                                  {getCategoryTitle(fieldData.fieldStatus) ? getCategoryTitle(fieldData.fieldStatus) : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Present</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData.count.toLocaleString()}\n                                  aria-label={`${fieldData.count.toLocaleString()} records present`}\n                                >\n                                  {fieldData.count.toLocaleString() ? fieldData.count.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Missing</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData.missing.toLocaleString()}\n                                  aria-label={`${fieldData.missing.toLocaleString()} missing instances`}\n                                >\n                                  {fieldData.missing.toLocaleString() ? fieldData.missing.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n\n                              <div className=\"space-y-1 stats-item\">\n                                <Text variant=\"small\" className=\"text-gray-700 stat-title\">Instances</Text>\n                                <Text\n                                  variant=\"body\"\n                                  className=\"font-medium tabular-nums\"\n                                  title={fieldData?.instances?.toLocaleString()}\n                                  aria-label={`${fieldData?.instances?.toLocaleString()} instances`}\n                                >\n                                  {fieldData?.instances?.toLocaleString() ? fieldData?.instances?.toLocaleString() : \"0\"}\n                                </Text>\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Subfields Section */}\n                          {hasSubfields && fieldData.subfields && Object.values(fieldData.subfields)?.some(subfield => subfield.count > 0) ? (\n                            <div className={cn(\n                              \"space-y-2\",\n                              isNarrow ? \"col-span-full\" : \"col-span-6\"\n                            )}>\n                              <button\n                                onClick={() => toggleSubfield(fieldName, 'all')}\n                                className=\"flex items-center justify-between p-2 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors w-auto\"\n                                aria-expanded={isSubfieldExpanded(fieldName, 'all')}\n                                aria-controls={`subfields-${fieldName}`}\n                              >\n                                <Text variant=\"body\" className=\"font-medium\">Subfields</Text>\n                                <ChevronDown\n                                  className={cn(\n                                    \"h-4 w-4 text-gray-500 transition-transform ml-2\",\n                                    isSubfieldExpanded(fieldName, 'all') ? \"rotate-180\" : \"\"\n                                  )}\n                                />\n                              </button>\n\n                              {isSubfieldExpanded(fieldName, 'all') && (\n                                <div\n                                  id={`subfields-${fieldName}`}\n                                  className=\"space-y-4 mt-2\"\n                                >\n                                  {Object.entries(fieldData.subfields)\n                                    .filter(isValidSubfield)\n                                    .sort(([a], [b]) => a.localeCompare(b))\n                                    .map(([subfieldName, subfieldData]) => {\n                                      const isExpanded = isSubfieldExpanded(fieldName, subfieldName);\n                                      return (\n                                        <div\n                                          key={subfieldName}\n                                          className={cn(\n                                            \"rounded-lg border border-gray-200 overflow-hidden\",\n                                            isNarrow ? \"\" : \"ml-6\"\n                                          )}\n                                        >\n                                          <button\n                                            onClick={() => toggleSubfield(fieldName, subfieldName)}\n                                            className=\"w-full px-4 py-3 flex items-center justify-between bg-gray-50 hover:bg-gray-100 transition-colors\"\n                                            aria-expanded={isExpanded}\n                                            aria-controls={`subfield-content-${fieldName}-${subfieldName}`}\n                                          >\n                                            <div className=\"flex items-center gap-2\">\n                                              <Text variant=\"body\" className=\"font-medium\">\n                                                {/**TESTING */}\n                                                {getSubfieldDisplayLabel(fieldName, subfieldName)}\n                                              </Text>\n                                              <TooltipProvider>\n                                                <Tooltip>\n                                                  <TooltipTrigger asChild>\n                                                    <span className=\"inline-flex p-1 hover:bg-gray-200 rounded-full transition-colors\">\n                                                      <Info className=\"h-4 w-4 text-gray-700\" />\n                                                    </span>\n                                                  </TooltipTrigger>\n                                                  <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                                                    {getSubfieldDescription(fieldName, subfieldName)}\n                                                    <a\n                                                      href={getSubfieldUrl(fieldName, subfieldName)}\n                                                      target=\"_blank\"\n                                                      rel=\"noopener noreferrer\"\n                                                      className=\"text-blue-700 hover:underline block mt-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                                      aria-label={`Learn more about ${getSubfieldDisplayLabel(fieldName, subfieldName)} (opens in new tab)`}\n                                                    >\n                                                      Learn more\n                                                    </a>\n                                                  </TooltipContent>\n                                                </Tooltip>\n                                              </TooltipProvider>\n                                            </div>\n                                            <div className=\"flex items-center gap-4\">\n                                              <div className=\"flex items-center gap-2\">\n                                                <Progress\n                                                  value={subfieldData.completeness * 100}\n                                                  className=\"h-2 w-24 bg-[#EBF0F5]\"\n                                                  indicatorClassName=\"bg-gray-900\"\n                                                />\n                                                <Text\n                                                  variant=\"body\"\n                                                  className=\"font-medium\"\n                                                >\n                                                  {formatCompleteness(subfieldData.completeness)}\n                                                </Text>\n                                              </div>\n                                              <ChevronDown\n                                                className={cn(\n                                                  \"h-4 w-4 text-gray-500 transition-transform\",\n                                                  isExpanded ? \"rotate-180\" : \"\"\n                                                )}\n                                              />\n                                            </div>\n                                          </button>\n\n                                          {isExpanded && (\n                                            <div\n                                              id={`subfield-content-${fieldName}-${subfieldName}`}\n                                              className=\"px-4 py-3\"\n                                            >\n                                              <div className=\"grid grid-cols-3 gap-4\">\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Present</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.count.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Missing-{getSubfieldDisplayLabel(fieldName, subfieldName)}</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.missing.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                                <div className=\"space-y-1\">\n                                                  <Text variant=\"small\" className=\"text-gray-700\">Instances</Text>\n                                                  <Text variant=\"body\" className=\"font-medium\">\n                                                    {subfieldData.instances.toLocaleString()}\n                                                  </Text>\n                                                </div>\n                                              </div>\n                                              {subfieldData.values && Object.keys(subfieldData.values).length > 0 && (\n                                                <>\n                                                  <div className=\"border-t border-gray-200 my-4\"></div>\n                                                  <div className=\"space-y-2\">\n                                                    {Object.entries(subfieldData.values)\n                                                      .filter(entry => entry[1] > 0)\n                                                      .sort((a, b) => b[1] - a[1])\n                                                      .map(([valueKey, valueCount]) => {\n                                                        const percentage = (valueCount / subfieldData.instances) * 100;\n                                                        return (\n                                                          <div key={valueKey} className=\"space-y-1\">\n                                                            <div className=\"flex justify-between items-center\">\n                                                              <Text variant=\"body\" className=\"font-medium\">\n                                                                {valueKey}\n                                                              </Text>\n                                                              <Text variant=\"body\" className=\"text-gray-600\">\n                                                                {formatCompleteness(percentage / 100)}\n                                                              </Text>\n                                                            </div>\n                                                            <div className=\"relative\">\n                                                              <Progress\n                                                                value={percentage}\n                                                                className=\"h-2 bg-[#EBF0F5]\"\n                                                                indicatorClassName=\"bg-gray-900\"\n                                                              />\n                                                              <div className=\"flex justify-between items-center mt-1\">\n                                                                <Text variant=\"small\" className=\"text-gray-600\">\n                                                                  log scale\n                                                                </Text>\n                                                                <Text variant=\"small\" className=\"text-gray-600 tabular-nums\">\n                                                                  {valueCount.toLocaleString()} / {subfieldData.instances.toLocaleString()}\n                                                                </Text>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        );\n                                                      })}\n                                                  </div>\n                                                </>\n                                              )}\n                                            </div>\n                                          )}\n                                        </div>\n                                      );\n                                    })}\n                                </div>\n                              )}\n                            </div>\n                          ) : (\n                            <div style={{ height: \"46px\" }}></div>\n                          )}\n\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ) : (\n                    <Card>\n                      <h2>MISSING</h2>\n                    </Card>\n                  )}\n\n                </div>\n              );\n            })}\n          </Stack>\n\n        </div>\n        {/**second row */}\n\n      </div>\n\n    </Stack>\n  );\n};\n\nconst SummaryFieldStats = ({ groupedFields, categories }: SummaryFieldStatsProps) => {\n  const sortedGroupedFields = Object.fromEntries(\n    Object.entries(groupedFields).map(([category, fields]) => [\n      category,\n      Object.fromEntries(\n        Object.entries(fields)\n          .sort(([a], [b]) => a.localeCompare(b))\n      )\n    ])\n  );\n\n  return (\n    <div className=\"grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n      {categories.map((category: FieldCategory) => (\n        <Card key={category} className=\"bg-white shadow-sm hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-center space-y-0 pb-2 border-b\">\n            <Text variant=\"h3\" className=\"text-center\">\n              {getCategoryTitle(category)}\n            </Text>\n          </CardHeader>\n          <CardContent className=\"pt-6\">\n            <Stack spacing=\"md\">\n              {Object.entries(sortedGroupedFields[category] || {}).map(([field, fieldInfo]) => {\n                const completeness = fieldInfo.completeness;\n                return (\n                  <div key={field} className=\"min-w-0\">\n                    <Stack spacing=\"sm\">\n                      <div className=\"flex items-center justify-between gap-1 sm:gap-2 min-w-0\">\n                        <div className=\"flex items-center gap-2 min-w-0 flex-1\">\n                          <Text\n                            variant=\"body\"\n                            className=\"font-medium truncate text-sm sm:text-base\"\n                            title={getFieldDisplayLabel(field)}\n                          >\n                            {getFieldDisplayLabel(field)}\n                          </Text>\n                          {getFieldDescription(field) && (\n                            <TooltipProvider>\n                              <Tooltip>\n                                <TooltipTrigger asChild>\n                                  <button\n                                    className=\"inline-flex flex-shrink-0 p-1 hover:bg-gray-100 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                    aria-label={`Information about ${field} in ${category}`}\n                                  >\n                                    <Info className=\"h-4 w-4 text-gray-700\" />\n                                  </button>\n                                </TooltipTrigger>\n                                <TooltipContent className=\"text-xs sm:text-sm text-gray-700 whitespace-normal break-words text-popover max-w-xs\">\n                                  {getFieldDescription(field)}\n                                  <a\n                                    href={getFieldUrl(field)}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"text-blue-700 hover:underline block mt-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                    aria-label={`Learn more about ${field} (opens in new tab)`}\n                                  >\n                                    Learn more\n                                  </a>\n                                </TooltipContent>\n                              </Tooltip>\n                            </TooltipProvider>\n                          )}\n                        </div>\n                        <Text\n                          variant=\"small\"\n                          className=\"text-gray-900 font-semibold text-sm whitespace-nowrap\"\n                        >\n                          {formatCompleteness(completeness) || 0} - TEST\n                        </Text>\n                      </div>\n                      <Progress\n                        value={completeness * 100}\n                        className=\"h-2 bg-primary/20\"\n                        indicatorClassName={getCategoryColor(category, completeness)}\n                        aria-label={`${getFieldDisplayLabel(field)} completion progress`}\n                      />\n                      <div className=\"flex justify-center text-sm text-gray-600\">\n                        <Text variant=\"small\" className=\"truncate text-xs sm:text-sm\">\n                          {fieldInfo.count.toLocaleString()} / {(fieldInfo.count + fieldInfo.missing).toLocaleString()} records\n                        </Text>\n                      </div>\n                    </Stack>\n                    {Object.entries(sortedGroupedFields[category] || {}).length > 1 &&\n                      field !== Object.keys(sortedGroupedFields[category] || {}).slice(-1)[0] && (\n                        <div className=\"mt-4 border-b border-gray-200\" />\n                      )}\n                  </div>\n                );\n              })}\n              {(!sortedGroupedFields[category] || Object.keys(sortedGroupedFields[category]).length === 0) && (\n                <Text variant=\"small\" className=\"text-gray-700 text-center py-4\">\n                  No {category} fields available\n                </Text>\n              )}\n            </Stack>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport function FieldStats({ stats, viewMode }: FieldStatsProps) {\n  const categories = ['mandatory', 'recommended', 'optional'] as const;\n  const { selectedView } = useStatsView();\n\n  const statsData: StatsView = selectedView === 'summary' || !stats.byResourceType?.resourceTypes?.[selectedView]\n    ? stats.summary ?? { fields: {} }\n    : stats.byResourceType.resourceTypes[selectedView] ?? { fields: {} };\n\n  const groupedFields: GroupedFields = Object.entries(statsData?.fields ?? {}).reduce<GroupedFields>((acc, [field, info]) => {\n    const category = info.fieldStatus as string;\n    if (!acc[category]) {\n      acc[category] = {};\n    }\n    acc[category][field] = info;\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"fields-containers\">\n      <Container variant=\"wide\" >\n        {viewMode === ViewMode.Detailed ? (\n          <DetailedFieldStats stats={statsData} />\n        ) : (\n          <SummaryFieldStats\n            groupedFields={groupedFields}\n            categories={categories}\n          />\n        )}\n      </Container>\n      {/* <Container variant=\"wide\" >\n        {viewMode === ViewMode.Detailed ? (\n          <DetailedFieldStats stats={statsData} />\n        ) : (\n          <SummaryFieldStats\n            groupedFields={groupedFields}\n            categories={categories}\n          />\n        )}\n      </Container> */}\n    </div>\n  );\n}\n\nexport function CompareFieldStats({ stats, figshareStats, viewMode }: FieldStatsProps) {\n  const categories = ['mandatory', 'recommended', 'optional'] as const;\n  const { selectedView } = useStatsView();\n\n  const statsData: StatsView = selectedView === 'summary' || !stats.byResourceType?.resourceTypes?.[selectedView]\n    ? stats.summary ?? { fields: {} }\n    : stats.byResourceType.resourceTypes[selectedView] ?? { fields: {} };\n\n  const figshareData: StatsView = selectedView === 'summary' || !figshareStats?.byResourceType?.resourceTypes?.[selectedView]\n    ? figshareStats?.summary ?? { fields: {} }\n    : figshareStats?.byResourceType.resourceTypes[selectedView] ?? { fields: {} };\n\n  const groupedFields: GroupedFields = Object.entries(statsData?.fields ?? {}).reduce<GroupedFields>((acc, [field, info]) => {\n    const category = info.fieldStatus as string;\n    if (!acc[category]) {\n      acc[category] = {};\n    }\n    acc[category][field] = info;\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"fields-containers\">\n      {viewMode === ViewMode.Detailed ? (\n        <>\n          <Container variant=\"wide\" >\n            <DetailedFieldStats stats={statsData} figshare={figshareData} />\n          </Container>\n        </>\n      ) : (\n        <Container variant=\"wide\" >\n          <SummaryFieldStats\n            groupedFields={groupedFields}\n            categories={categories}\n          />\n        </Container>\n      )\n      }\n    </div >\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4138, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n    aria-label={props['aria-label'] || \"Select option\"}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" aria-hidden=\"true\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n      role=\"listbox\"\n      aria-orientation=\"vertical\"\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"w-full min-w-[var(--radix-select-trigger-width)] max-h-[300px] overflow-y-auto\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n    role=\"option\"\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" aria-hidden=\"true\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectItem,\n}"],"names":[],"mappings":";;;;;;;;;AAEA;AAGA;AAFA;AACA;AAAA;AAJA;;;;;;AAOA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2PACA;QAED,GAAG,KAAK;QACT,cAAY,KAAK,CAAC,aAAa,IAAI;;YAElC;0BACD,8OAAC,mKAAgB,IAAI;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;oBAAqB,eAAY;;;;;;;;;;;;;;;;;AAI9D,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,mKAAgB,MAAM;kBACrB,cAAA,8OAAC,mKAAgB,OAAO;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8bACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;YACT,MAAK;YACL,oBAAiB;sBAEjB,cAAA,8OAAC,mKAAgB,QAAQ;gBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;0BAGH;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;QACT,MAAK;;0BAEL,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mKAAgB,aAAa;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;wBAAU,eAAY;;;;;;;;;;;;;;;;0BAG3C,8OAAC,mKAAgB,QAAQ;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 4259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4265, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAEA;AADA;AAHA;;;;;AAMA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 4312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4318, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 4354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4360, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/lib/hooks/use-provider-navigation.ts"],"sourcesContent":["import { useSearchParams, useRouter } from 'next/navigation';\nimport { useCallback } from 'react';\n\ninterface ProviderNavigationParams {\n  providerId?: string;\n  clientId?: string;\n  view?: string;\n}\n\nexport function useProviderNavigation() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  const currentParams: ProviderNavigationParams = {\n    clientId: searchParams.get('client') || undefined,\n    view: searchParams.get('view') || 'summary',\n  };\n\n  const navigateToProvider = useCallback(\n    (params: ProviderNavigationParams) => {\n      const { providerId, clientId, view = 'summary' } = params;\n      if (!providerId) return;\n\n      const queryParams = new URLSearchParams();\n      if (view) queryParams.set('view', view);\n      if (clientId) queryParams.set('client', clientId);\n\n      const queryString = queryParams.toString();\n      const url = `/providers/${providerId}${queryString ? `?${queryString}` : ''}`;\n      router.push(url);\n    },\n    [router]\n  );\n\n  return {\n    currentParams,\n    navigateToProvider,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQO,SAAS;IACd,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,MAAM,gBAA0C;QAC9C,UAAU,aAAa,GAAG,CAAC,aAAa;QACxC,MAAM,aAAa,GAAG,CAAC,WAAW;IACpC;IAEA,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACnC,CAAC;QACC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG;QACnD,IAAI,CAAC,YAAY;QAEjB,MAAM,cAAc,IAAI;QACxB,IAAI,MAAM,YAAY,GAAG,CAAC,QAAQ;QAClC,IAAI,UAAU,YAAY,GAAG,CAAC,UAAU;QAExC,MAAM,cAAc,YAAY,QAAQ;QACxC,MAAM,MAAM,CAAC,WAAW,EAAE,aAAa,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAAI;QAC7E,OAAO,IAAI,CAAC;IACd,GACA;QAAC;KAAO;IAGV,OAAO;QACL;QACA;IACF;AACF"}},
    {"offset": {"line": 4391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4397, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/stats/stats-selector.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useStatsView } from '@/contexts/stats-view-context';\nimport { Stats } from '@/lib/types/api';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { cn } from '@/lib/utils';\n\ninterface StatsSelectorProps {\n  stats?: Stats;\n  className?: string;\n}\n\nexport function StatsSelector({ stats, className }: StatsSelectorProps) {\n  const { selectedView, setSelectedView, availableViews, setAvailableViews } = useStatsView();\n  const searchParams = useSearchParams();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!stats) {\n      setAvailableViews(['summary']);\n      return;\n    }\n\n    const views = ['summary'];\n    if (stats.byResourceType?.resourceTypes) {\n      const resourceTypes = Object.entries(stats.byResourceType.resourceTypes)\n        .filter(([, statsView]) => statsView.count > 0)\n        .map(([type]) => type)\n        .sort((a, b) => a.localeCompare(b));\n      views.push(...resourceTypes);\n    }\n\n    setAvailableViews(views);\n\n\n    if (!views.includes(selectedView)) {\n      setSelectedView('summary');\n      const params = new URLSearchParams(searchParams.toString());\n      params.set('view', 'summary');\n      router.replace(`?${params.toString()}`, { scroll: false });\n    }\n  }, [stats, setAvailableViews, selectedView, setSelectedView, searchParams, router]);\n\n  useEffect(() => {\n    const viewFromUrl = searchParams.get('view');\n    if (viewFromUrl && availableViews.includes(viewFromUrl)) {\n      setSelectedView(viewFromUrl);\n    } else if (!viewFromUrl && availableViews.length > 0) {\n      setSelectedView('summary');\n    }\n  }, [searchParams, availableViews, setSelectedView]);\n\n  const handleViewChange = (view: string) => {\n    setSelectedView(view);\n    const params = new URLSearchParams(searchParams.toString());\n    params.set('view', view);\n    router.replace(`?${params.toString()}`, { scroll: false });\n  };\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Select value={selectedView} onValueChange={handleViewChange}>\n      <SelectTrigger className={cn(\"text-center justify-center\", className)}>\n        <SelectValue placeholder=\"Select view\" />\n      </SelectTrigger>\n      <SelectContent>\n        {availableViews.map((view) => (\n          <SelectItem key={view} value={view}>\n            {view === 'summary' \n              ? 'All' \n              : view.replace(/([A-Z])/g, ' $1').trim()}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAOA;AACA;;;;;;;AAOO,SAAS,cAAc,EAAE,KAAK,EAAE,SAAS,EAAsB;IACpE,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,eAAY,AAAD;IACxF,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;YACV,kBAAkB;gBAAC;aAAU;YAC7B;QACF;QAEA,MAAM,QAAQ;YAAC;SAAU;QACzB,IAAI,MAAM,cAAc,EAAE,eAAe;YACvC,MAAM,gBAAgB,OAAO,OAAO,CAAC,MAAM,cAAc,CAAC,aAAa,EACpE,MAAM,CAAC,CAAC,GAAG,UAAU,GAAK,UAAU,KAAK,GAAG,GAC5C,GAAG,CAAC,CAAC,CAAC,KAAK,GAAK,MAChB,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,aAAa,CAAC;YAClC,MAAM,IAAI,IAAI;QAChB;QAEA,kBAAkB;QAGlB,IAAI,CAAC,MAAM,QAAQ,CAAC,eAAe;YACjC,gBAAgB;YAChB,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;YACxD,OAAO,GAAG,CAAC,QAAQ;YACnB,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI,EAAE;gBAAE,QAAQ;YAAM;QAC1D;IACF,GAAG;QAAC;QAAO;QAAmB;QAAc;QAAiB;QAAc;KAAO;IAElF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc,aAAa,GAAG,CAAC;QACrC,IAAI,eAAe,eAAe,QAAQ,CAAC,cAAc;YACvD,gBAAgB;QAClB,OAAO,IAAI,CAAC,eAAe,eAAe,MAAM,GAAG,GAAG;YACpD,gBAAgB;QAClB;IACF,GAAG;QAAC;QAAc;QAAgB;KAAgB;IAElD,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;QAChB,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QACxD,OAAO,GAAG,CAAC,QAAQ;QACnB,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI,EAAE;YAAE,QAAQ;QAAM;IAC1D;IAEA,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,OAAO;QAAc,eAAe;;0BAC1C,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;0BACzD,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,eAAe,GAAG,CAAC,CAAC,qBACnB,8OAAC,kIAAA,CAAA,aAAU;wBAAY,OAAO;kCAC3B,SAAS,YACN,QACA,KAAK,OAAO,CAAC,YAAY,OAAO,IAAI;uBAHzB;;;;;;;;;;;;;;;;AAS3B"}},
    {"offset": {"line": 4509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4515, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { AlertTriangle, ChevronDown } from \"lucide-react\"\nimport { Text } from \"@/components/typography/typography\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-red-600/50 bg-red-50 text-red-900 dark:border-red-500/50 dark:bg-red-950 dark:text-red-200 [&>svg]:text-red-600 dark:[&>svg]:text-red-400\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => (\n  <Text\n    ref={ref}\n    variant=\"h3\"\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  >\n    {children}\n  </Text>\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => (\n  <Text\n    ref={ref}\n    variant=\"body\"\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  >\n    {children}\n  </Text>\n))\nAlertDescription.displayName = \"AlertDescription\"\n\ninterface AlertErrorProps {\n  title: string;\n  description: string;\n  details?: string[];\n  className?: string;\n}\n\nfunction AlertError({ title, description, details, className }: AlertErrorProps) {\n  return (\n    <Alert \n      variant=\"destructive\" \n      className={className}\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n    >\n      <AlertTriangle className=\"h-4 w-4\" aria-hidden=\"true\" />\n      <AlertTitle className=\"text-lg font-semibold\">{title}</AlertTitle>\n      <AlertDescription className=\"space-y-2\">\n        <Text variant=\"body\" className=\"text-base\">{description}</Text>\n        {details && details.length > 0 && (\n          <details className=\"text-sm\">\n            <summary className=\"flex items-center gap-1 cursor-pointer font-medium hover:underline\">\n              <ChevronDown className=\"h-4 w-4 transition-transform duration-200 [open]:rotate-180\" />\n              Details\n            </summary>\n            <ul className=\"mt-2 list-disc pl-4 space-y-1\">\n              {details.map((detail, index) => (\n                <li key={index}>{detail}</li>\n              ))}\n            </ul>\n          </details>\n        )}\n      </AlertDescription>\n    </Alert>\n  );\n}\n\nexport { Alert, AlertTitle, AlertDescription, AlertError }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AADA;AAAA;;;;;;;AAGA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,8IAAA,CAAA,OAAI;QACH,KAAK;QACL,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;kBAER;;;;;;AAGL,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,8IAAA,CAAA,OAAI;QACH,KAAK;QACL,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;kBAER;;;;;;AAGL,iBAAiB,WAAW,GAAG;AAS/B,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAmB;IAC7E,qBACE,8OAAC;QACC,SAAQ;QACR,WAAW;QACX,aAAU;QACV,eAAY;;0BAEZ,8OAAC,wNAAA,CAAA,gBAAa;gBAAC,WAAU;gBAAU,eAAY;;;;;;0BAC/C,8OAAC;gBAAW,WAAU;0BAAyB;;;;;;0BAC/C,8OAAC;gBAAiB,WAAU;;kCAC1B,8OAAC,8IAAA,CAAA,OAAI;wBAAC,SAAQ;wBAAO,WAAU;kCAAa;;;;;;oBAC3C,WAAW,QAAQ,MAAM,GAAG,mBAC3B,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAQ,WAAU;;kDACjB,8OAAC,oNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;oCAAgE;;;;;;;0CAGzF,8OAAC;gCAAG,WAAU;0CACX,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;kDAAgB;uCAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzB"}},
    {"offset": {"line": 4671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4677, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/providers/provider-details.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useMemo } from 'react';\nimport { useProviderDetails, useClientDetails, useClientStats } from '@/lib/hooks/use-entities';\nimport { Client } from '@/lib/types/api';\nimport { useQuery } from '@tanstack/react-query';\nimport { getProviderClientsList } from '@/lib/api/endpoints';\nimport { EntityMetrics } from '@/components/common/entity-metrics';\nimport { ResourceTypeStats } from '@/components/common/resource-type-stats';\nimport { FieldStats, ViewMode, CompareFieldStats } from '@/components/common/field-stats';\nimport { ArrowLeft, BarChart2, List } from 'lucide-react';\nimport Link from 'next/link';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { useProviderNavigation } from '@/lib/hooks/use-provider-navigation';\nimport { StatsViewProvider } from '@/contexts/stats-view-context';\nimport { useStatsView } from '@/contexts/stats-view-context';\nimport { StatsSelector } from '@/components/stats/stats-selector';\nimport { AlertError } from '@/components/ui/alert';\nimport { ERROR_MESSAGES } from '@/lib/constants';\nimport { LoadingOverlay } from '@/components/ui/loading-overlay';\nimport { Stack } from '@/components/layout/stack';\nimport { Text } from '@/components/typography/typography';\n\nexport function ProviderDetails({ providerId }: { providerId: string }) {\n  const { data: provider, isLoading: isLoadingProvider, error: providerError } = useProviderDetails(providerId);\n  const { data: figshare } = useProviderDetails('cern');\n\n  const { currentParams, navigateToProvider } = useProviderNavigation();\n  const { view: viewParam, clientId } = currentParams;\n  const [selectedTab, setSelectedTab] = useState(clientId ? \"repositories\" : \"organization\");\n  const [lastSelectedClientId, setLastSelectedClientId] = useState<string | null>(clientId || null);\n\n  const { data: clientsListData, isLoading: isLoadingClientsList, error: clientsListError } = useQuery({\n    queryKey: ['provider-clients-list', providerId],\n    queryFn: () => getProviderClientsList(providerId),\n    enabled: !!providerId && !!provider && selectedTab === \"repositories\",\n  });\n\n  const { data: selectedClient, isLoading: isLoadingClient, error: clientError } = useClientDetails(\n    clientId ?? ''\n  );\n\n  const { data: selectedClientStats, isLoading: isLoadingClientStats } = useClientStats(\n    clientId ?? ''\n  );\n\n  const clients = (clientsListData || []).filter((client): client is Client => client !== null);\n  const isClientNotFound = clientId && clientError?.message?.includes('not found');\n\n  const selectedClientData = useMemo(() => {\n    if (!clientId || !selectedClient || !selectedClientStats) return null;\n    return {\n      ...selectedClient,\n      stats: selectedClientStats.stats\n    };\n  }, [clientId, selectedClient, selectedClientStats]);\n\n  const [fieldStatsView, setFieldStatsView] = useState<ViewMode>(ViewMode.Summary);\n  const { } = useStatsView();\n\n  const handleRepositoryChange = (newClientId: string | null) => {\n    setLastSelectedClientId(newClientId);\n    navigateToProvider({\n      providerId,\n      clientId: newClientId || undefined,\n      view: viewParam\n    });\n    setSelectedTab(newClientId ? \"repositories\" : \"organization\");\n  };\n\n  const handleTabChange = (tab: string) => {\n    setSelectedTab(tab);\n    if (tab === \"organization\") {\n      navigateToProvider({\n        providerId,\n        view: viewParam\n      });\n    } else if (tab === \"repositories\" && lastSelectedClientId) {\n      navigateToProvider({\n        providerId,\n        clientId: lastSelectedClientId,\n        view: viewParam\n      });\n    }\n  };\n\n  if (isLoadingProvider ||\n    (selectedTab === \"repositories\" && isLoadingClientsList) ||\n    (clientId && !isClientNotFound && (isLoadingClient || isLoadingClientStats))) {\n    return (\n      <LoadingOverlay\n        isLoading={true}\n        message={\n          isLoadingProvider\n            ? \"Loading provider data...\"\n            : clientId\n              ? isLoadingClient\n                ? \"Loading repository data...\"\n                : \"Loading repository statistics...\"\n              : \"Loading repositories...\"\n        }\n      >\n        <div className=\"h-96\" />\n      </LoadingOverlay>\n    );\n  }\n\n  if (providerError) {\n    return (\n      <AlertError\n        title={ERROR_MESSAGES.ORGANIZATION.TITLE}\n        description={ERROR_MESSAGES.ORGANIZATION.LOAD_FAILED}\n        details={[`Error: ${providerError.message}`]}\n      />\n    );\n  }\n\n  if (!provider) {\n    return (\n      <AlertError\n        title={ERROR_MESSAGES.ORGANIZATION.TITLE}\n        description={ERROR_MESSAGES.ORGANIZATION.NOT_FOUND}\n      />\n    );\n  }\n\n  if (clientsListError && selectedTab === \"repositories\") {\n    return (\n      <AlertError\n        title={ERROR_MESSAGES.REPOSITORY.TITLE}\n        description={ERROR_MESSAGES.REPOSITORY.LOAD_FAILED(1, 0)}\n        details={[`Error: ${clientsListError.message}`]}\n      />\n    );\n  }\n\n  if (clientId && isClientNotFound) {\n    return (\n      <AlertError\n        title={ERROR_MESSAGES.REPOSITORY.TITLE}\n        description={ERROR_MESSAGES.REPOSITORY.NOT_FOUND(clientId)}\n      />\n    );\n  }\n\n  if (clientError && !isClientNotFound) {\n    return (\n      <AlertError\n        title={ERROR_MESSAGES.REPOSITORY.TITLE}\n        description={ERROR_MESSAGES.REPOSITORY.LOAD_FAILED(1, 0)}\n        details={[`Error: ${clientError.message}`]}\n      />\n    );\n  }\n\n  return (\n    <>\n      <StatsViewProvider>\n        <Stack spacing=\"lg\">\n          {clientId && !clients.some(c => c.id === clientId) && (\n            <AlertError\n              title={ERROR_MESSAGES.REPOSITORY.TITLE}\n              description={ERROR_MESSAGES.REPOSITORY.NOT_FOUND(clientId)}\n            />\n          )}\n\n          <div className=\"flex items-center justify-between flex-column items-start\">\n            <Link\n              href=\"/\"\n              className=\"inline-flex items-center gap-2 text-sm hover:text-foreground transition-colors\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <Text variant=\"small\" className=\"text-muted-foreground hover:text-foreground transition-colors\">Back to Search</Text>\n            </Link>\n            <div className=\"flex flex-col gap-2\">\n              <Text variant=\"small\" className=\"font-medium text-muted-foreground\">Resource Type</Text>\n              <StatsSelector\n                stats={selectedTab === \"repositories\" && selectedClientData ? selectedClientData.stats : provider.stats}\n                className=\"w-48\"\n              />\n            </div>\n          </div>\n\n          <Stack spacing=\"lg\">\n            <div className=\"flex items-center justify-between flex-column items-start\">\n              <div className=\"flex flex-col gap-2\">\n                <Text variant=\"small\" className=\"font-medium text-muted-foreground\">Organization</Text>\n                <div className=\"flex items-center gap-3\">\n                  <Text variant=\"h1\" wrap={true}>{provider.attributes.name}</Text>\n                  {provider.attributes.memberType && (\n                    <Badge variant=\"outline\" className=\"inline-flex items-center justify-center w-fit\">\n                      <Text variant=\"small\" className=\"capitalize text-center\">{provider.attributes.memberType.toLowerCase().replace(/_/g, ' ')}</Text>\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"flex items-center gap-2 text-sm\">\n                  {provider.attributes.rorId && (\n                    <>\n                      <Link\n                        href={provider.attributes.rorId}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"hover:text-primary hover:underline\"\n                      >\n                        <Text variant=\"small\" className=\"text-muted-foreground hover:text-primary hover:underline\" truncate={true}>{provider.attributes.rorId}</Text>\n                      </Link>\n                      <Text variant=\"small\" className=\"text-muted-foreground\">•</Text>\n                      <Link\n                        href={`https://commons.datacite.org/ror.org${provider.attributes.rorId.replace('https://ror.org', '')}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"hover:text-primary hover:underline\"\n                      >\n                        <Text variant=\"small\" className=\"text-muted-foreground hover:text-primary hover:underline\">View in DataCite Commons</Text>\n                      </Link>\n                    </>\n                  )}\n                </div>\n              </div>\n              {provider.attributes.isConsortium && (\n                <Badge variant=\"secondary\" className=\"self-start\">\n                  <Text variant=\"small\">Consortium</Text>\n                </Badge>\n              )}\n            </div>\n\n            <Tabs value={selectedTab} onValueChange={handleTabChange}>\n              <div className=\"flex items-center justify-between mb-8\">\n                <Tabs value={fieldStatsView} onValueChange={(value) => setFieldStatsView(value as ViewMode)}>\n                  <TabsList>\n                    <TabsTrigger value={ViewMode.Summary}>\n                      <List className=\"h-4 w-4 mr-2\" />\n                      <Text variant=\"small\">Summary</Text>\n                    </TabsTrigger>\n                    <TabsTrigger value={ViewMode.Detailed}>\n                      <BarChart2 className=\"h-4 w-4 mr-2\" />\n                      <Text variant=\"small\">Detailed</Text>\n                    </TabsTrigger>\n                  </TabsList>\n                </Tabs>\n                <TabsList>\n                  <TabsTrigger value=\"organization\">\n                    <Text variant=\"small\">Organization</Text>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"repositories\">\n                    <Text variant=\"small\">Repositories</Text>\n                  </TabsTrigger>\n                </TabsList>\n              </div>\n\n              {/* Keep both views mounted but hide/show with CSS */}\n              <div className={`${selectedTab === \"organization\" ? \"block\" : \"hidden\"}`}>\n                <Stack spacing=\"lg\">\n                  <EntityMetrics entity={provider} />\n                  <div className={`${fieldStatsView === ViewMode.Detailed ? \"block\" : \"hidden\"}`}>\n                    <ResourceTypeStats provider={provider} />\n                  </div>\n                  <CompareFieldStats\n                    stats={provider.stats}\n                    figshareStats={figshare?.stats}\n                    viewMode={fieldStatsView}\n                    onToggleView={() => setFieldStatsView(fieldStatsView === ViewMode.Summary ? ViewMode.Detailed : ViewMode.Summary)}\n                  />\n                </Stack>\n              </div>\n\n              <div className={`${selectedTab === \"repositories\" ? \"block\" : \"hidden\"}`}>\n                <Stack spacing=\"lg\">\n                  <LoadingOverlay\n                    isLoading={isLoadingClientsList || isLoadingClient || isLoadingClientStats}\n                    message=\"Loading client data...\"\n                  >\n                    {clients.length === 0 ? (\n                      <Text variant=\"body\" className=\"text-center text-muted-foreground\">\n                        No repositories available for this organization\n                      </Text>\n                    ) : (\n                      <div className=\"grid gap-4\">\n                        <Stack spacing=\"md\">\n                          <Text variant=\"h2\">Repositories</Text>\n                          <Select value={clientId || lastSelectedClientId || \"\"} onValueChange={handleRepositoryChange}>\n                            <SelectTrigger className=\"w-full\">\n                              <SelectValue placeholder=\"Select a repository\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {clients.map((client) => (\n                                <SelectItem key={client.id} value={client.id}>\n                                  <Text variant=\"small\" truncate={true}>{client.attributes.name}</Text>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </Stack>\n\n                        {selectedClientData && (\n                          <Stack spacing=\"md\">\n                            <div className=\"border-t pt-6\">\n                              <Stack spacing=\"sm\">\n                                <Text variant=\"h2\" wrap={true}>{selectedClientData.attributes.name}</Text>\n                                <Link\n                                  href={`https://commons.datacite.org/repositories?query=${encodeURIComponent(selectedClientData.attributes.name || '')}`}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                  className=\"hover:text-primary hover:underline\"\n                                >\n                                  <Text variant=\"small\" className=\"text-muted-foreground hover:text-primary hover:underline\">View in DataCite Commons</Text>\n                                </Link>\n                              </Stack>\n                            </div>\n                            <Stack spacing=\"lg\">\n                              <EntityMetrics entity={selectedClientData} />\n                              <div className={`${fieldStatsView === ViewMode.Detailed ? \"block\" : \"hidden\"}`}>\n                                <ResourceTypeStats provider={selectedClientData} />\n                              </div>\n\n                              <CompareFieldStats\n                                stats={selectedClientData.stats}\n\n                                viewMode={fieldStatsView}\n                                onToggleView={() => setFieldStatsView(fieldStatsView === ViewMode.Summary ? ViewMode.Detailed : ViewMode.Summary)}\n                              />\n                            </Stack>\n                          </Stack>\n                        )}\n                      </div>\n                    )}\n                  </LoadingOverlay>\n                </Stack>\n              </div>\n            </Tabs>\n          </Stack>\n        </Stack>\n      </StatsViewProvider>\n    </>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5459, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/layout/page-layout.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Container } from './container';\nimport { Text } from '../typography/typography';\nimport { cn } from '@/lib/utils';\n\ninterface PageLayoutProps {\n  title?: string;\n  description?: string;\n  children: ReactNode;\n  variant?: 'narrow' | 'wide' | 'full';\n  className?: string;\n}\n\nexport function PageLayout({ \n  title, \n  description, \n  children, \n  variant = 'wide',\n  className \n}: PageLayoutProps) {\n  return (\n    <Container variant={variant}>\n      {title && (\n        <header className=\"mb-4 sm:mb-6 lg:mb-8 text-center\">\n          <Text \n            variant=\"h1\" \n            className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-datacite-dark-blue\"\n          >\n            {title}\n          </Text>\n          {description && (\n            <Text \n              variant=\"body\" \n              className=\"mt-2 sm:mt-3 text-base sm:text-lg text-gray-700\"\n            >\n              {description}\n            </Text>\n          )}\n        </header>\n      )}\n      <main className={cn('w-full', className)}>\n        {children}\n      </main>\n    </Container>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAUO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,QAAQ,EACR,UAAU,MAAM,EAChB,SAAS,EACO;IAChB,qBACE,8OAAC,yIAAA,CAAA,YAAS;QAAC,SAAS;;YACjB,uBACC,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC,8IAAA,CAAA,OAAI;wBACH,SAAQ;wBACR,WAAU;kCAET;;;;;;oBAEF,6BACC,8OAAC,8IAAA,CAAA,OAAI;wBACH,SAAQ;wBACR,WAAU;kCAET;;;;;;;;;;;;0BAKT,8OAAC;gBAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;0BAC3B;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 5516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5522, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/app/providers/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { use, useEffect } from 'react';\nimport { ProviderDetails } from '@/components/providers/provider-details';\nimport { LoadingOverlay } from '@/components/ui/loading-overlay';\nimport { PageLayout } from '@/components/layout/page-layout';\nimport { Suspense } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function ProviderDetailsPage({\n  params,\n}: {\n  params: Promise<{ id: string }>;\n}) {\n  const resolvedParams = use(params); // Unwrap params using React's `use()`\n\n  useEffect(() => {\n    const message = sessionStorage.getItem('toastMessage');\n    if (message) {\n      toast.success(message);\n      sessionStorage.removeItem('toastMessage'); // Prevent showing again on refresh\n    }\n  }, []);\n  return (\n    <Suspense fallback={\n      <PageLayout\n        variant=\"wide\"\n      >\n        <LoadingOverlay isLoading={true} message=\"Loading provider details...\">\n          <div className=\"h-72 sm:h-96\" />\n        </LoadingOverlay>\n      </PageLayout>\n    }>\n      <PageLayout\n        variant=\"wide\"\n      >\n        <ProviderDetails providerId={resolvedParams.id} />\n      </PageLayout>\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;;AASe,SAAS,oBAAoB,EAC1C,MAAM,EAGP;IACC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,MAAG,AAAD,EAAE,SAAS,sCAAsC;IAE1E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,eAAe,OAAO,CAAC;QACvC,IAAI,SAAS;YACX,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,eAAe,UAAU,CAAC,iBAAiB,mCAAmC;QAChF;IACF,GAAG,EAAE;IACL,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBACR,8OAAC,8IAAA,CAAA,aAAU;YACT,SAAQ;sBAER,cAAA,8OAAC,8IAAA,CAAA,iBAAc;gBAAC,WAAW;gBAAM,SAAQ;0BACvC,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;kBAInB,cAAA,8OAAC,8IAAA,CAAA,aAAU;YACT,SAAQ;sBAER,cAAA,8OAAC,sJAAA,CAAA,kBAAe;gBAAC,YAAY,eAAe,EAAE;;;;;;;;;;;;;;;;AAItD"}},
    {"offset": {"line": 5591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}