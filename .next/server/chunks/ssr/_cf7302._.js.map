{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/providers/provider-details.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProviderDetails = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProviderDetails() from the server but ProviderDetails is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/providers/provider-details.tsx <module evaluation>\",\n    \"ProviderDetails\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/providers/provider-details.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProviderDetails = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProviderDetails() from the server but ProviderDetails is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/providers/provider-details.tsx\",\n    \"ProviderDetails\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2DACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/spinner.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\ninterface SpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\"\n  className?: string\n}\n\nexport function Spinner({ size = \"md\", className }: SpinnerProps) {\n  return (\n    <div\n      className={cn(\n        \"inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n        {\n          \"h-4 w-4\": size === \"sm\",\n          \"h-6 w-6\": size === \"md\",\n          \"h-8 w-8\": size === \"lg\",\n        },\n        \"text-datacite-dark-blue\",\n        className\n      )}\n      role=\"status\"\n      aria-label=\"Loading\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,QAAQ,EAAE,OAAO,IAAI,EAAE,SAAS,EAAgB;IAC9D,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;YACE,WAAW,SAAS;YACpB,WAAW,SAAS;YACpB,WAAW,SAAS;QACtB,GACA,2BACA;QAEF,MAAK;QACL,cAAW;kBAEX,cAAA,8OAAC;YAAK,WAAU;sBAAU;;;;;;;;;;;AAGhC"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/loading-overlay.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport { Spinner } from \"./spinner\"\n\ninterface LoadingOverlayProps {\n  isLoading: boolean\n  children: React.ReactNode\n  className?: string\n  message?: string\n}\n\nexport function LoadingOverlay({\n  isLoading,\n  children,\n  className,\n  message = \"Loading...\"\n}: LoadingOverlayProps) {\n  if (!isLoading) return <>{children}</>\n\n  return (\n    <div className=\"relative\">\n      {children}\n      <div\n        className={cn(\n          \"absolute inset-0 flex flex-col items-center justify-center\",\n          \"bg-white/80 backdrop-blur-sm transition-all duration-200\",\n          className\n        )}\n      >\n        <Spinner size=\"lg\" />\n        {message && (\n          <p className=\"mt-2 text-sm text-datacite-dark-blue\">{message}</p>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASO,SAAS,eAAe,EAC7B,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,YAAY,EACF;IACpB,IAAI,CAAC,WAAW,qBAAO;kBAAG;;IAE1B,qBACE,8OAAC;QAAI,WAAU;;YACZ;0BACD,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,4DACA;;kCAGF,8OAAC,mIAAA,CAAA,UAAO;wBAAC,MAAK;;;;;;oBACb,yBACC,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;;;;;;;;;;;;;AAK/D"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/layout/container.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface ContainerProps {\n  variant: 'narrow' | 'wide' | 'full';\n  children: ReactNode;\n  className?: string;\n}\n\nconst containerVariants = {\n  narrow: 'max-w-2xl',\n  wide: 'max-w-5xl',\n  full: 'max-w-full'\n};\n\nexport function Container({ variant, children, className }: ContainerProps) {\n  return (\n    <div className={cn(\n      'container mx-auto px-3 sm:px-4 lg:px-5 py-2 sm:py-3 lg:py-4', \n      containerVariants[variant],\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAQA,MAAM,oBAAoB;IACxB,QAAQ;IACR,MAAM;IACN,MAAM;AACR;AAEO,SAAS,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAkB;IACxE,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACf,+DACA,iBAAiB,CAAC,QAAQ,EAC1B;kBAEC;;;;;;AAGP"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/layout/page-layout.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Container } from './container';\nimport { Text } from '../typography/typography';\nimport { cn } from '@/lib/utils';\n\ninterface PageLayoutProps {\n  title?: string;\n  description?: string;\n  children: ReactNode;\n  variant?: 'narrow' | 'wide' | 'full';\n  className?: string;\n}\n\nexport function PageLayout({ \n  title, \n  description, \n  children, \n  variant = 'wide',\n  className \n}: PageLayoutProps) {\n  return (\n    <Container variant={variant}>\n      {title && (\n        <header className=\"mb-4 sm:mb-6 lg:mb-8 text-center\">\n          <Text \n            variant=\"h1\" \n            className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-datacite-dark-blue\"\n          >\n            {title}\n          </Text>\n          {description && (\n            <Text \n              variant=\"body\" \n              className=\"mt-2 sm:mt-3 text-base sm:text-lg text-gray-700\"\n            >\n              {description}\n            </Text>\n          )}\n        </header>\n      )}\n      <main className={cn('w-full', className)}>\n        {children}\n      </main>\n    </Container>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAUO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,QAAQ,EACR,UAAU,MAAM,EAChB,SAAS,EACO;IAChB,qBACE,8OAAC,yIAAA,CAAA,YAAS;QAAC,SAAS;;YACjB,uBACC,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC,8IAAA,CAAA,OAAI;wBACH,SAAQ;wBACR,WAAU;kCAET;;;;;;oBAEF,6BACC,8OAAC,8IAAA,CAAA,OAAI;wBACH,SAAQ;wBACR,WAAU;kCAET;;;;;;;;;;;;0BAKT,8OAAC;gBAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;0BAC3B;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/app/providers/%5Bid%5D/page.tsx"],"sourcesContent":["import { ProviderDetails } from '@/components/providers/provider-details';\nimport { LoadingOverlay } from '@/components/ui/loading-overlay';\nimport { PageLayout } from '@/components/layout/page-layout';\nimport { Suspense } from 'react';\n\nexport default function ProviderDetailsPage({\n  params,\n}: {\n  params: { id: string };\n}) {\n  return (\n    <Suspense fallback={\n      <PageLayout\n        variant=\"wide\"\n      >\n        <LoadingOverlay isLoading={true} message=\"Loading provider details...\">\n          <div className=\"h-72 sm:h-96\" />\n        </LoadingOverlay>\n      </PageLayout>\n    }>\n      <PageLayout\n        variant=\"wide\"\n      >\n        <ProviderDetails providerId={params.id} />\n      </PageLayout>\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS,oBAAoB,EAC1C,MAAM,EAGP;IACC,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBACR,8OAAC,8IAAA,CAAA,aAAU;YACT,SAAQ;sBAER,cAAA,8OAAC,8IAAA,CAAA,iBAAc;gBAAC,WAAW;gBAAM,SAAQ;0BACvC,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;kBAInB,cAAA,8OAAC,8IAAA,CAAA,aAAU;YACT,SAAQ;sBAER,cAAA,8OAAC,sJAAA,CAAA,kBAAe;gBAAC,YAAY,OAAO,EAAE;;;;;;;;;;;;;;;;AAI9C"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAAA,GAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,QAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}