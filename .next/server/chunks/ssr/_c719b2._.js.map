{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/common/entity-search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EntitySearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call EntitySearch() from the server but EntitySearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/common/entity-search.tsx <module evaluation>\",\n    \"EntitySearch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/common/entity-search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EntitySearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call EntitySearch() from the server but EntitySearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/common/entity-search.tsx\",\n    \"EntitySearch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/spinner.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\ninterface SpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\"\n  className?: string\n}\n\nexport function Spinner({ size = \"md\", className }: SpinnerProps) {\n  return (\n    <div\n      className={cn(\n        \"inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n        {\n          \"h-4 w-4\": size === \"sm\",\n          \"h-6 w-6\": size === \"md\",\n          \"h-8 w-8\": size === \"lg\",\n        },\n        \"text-datacite-dark-blue\",\n        className\n      )}\n      role=\"status\"\n      aria-label=\"Loading\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,QAAQ,EAAE,OAAO,IAAI,EAAE,SAAS,EAAgB;IAC9D,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;YACE,WAAW,SAAS;YACpB,WAAW,SAAS;YACpB,WAAW,SAAS;QACtB,GACA,2BACA;QAEF,MAAK;QACL,cAAW;kBAEX,cAAA,8OAAC;YAAK,WAAU;sBAAU;;;;;;;;;;;AAGhC"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/components/ui/loading-overlay.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport { Spinner } from \"./spinner\"\n\ninterface LoadingOverlayProps {\n  isLoading: boolean\n  children: React.ReactNode\n  className?: string\n  message?: string\n}\n\nexport function LoadingOverlay({\n  isLoading,\n  children,\n  className,\n  message = \"Loading...\"\n}: LoadingOverlayProps) {\n  if (!isLoading) return <>{children}</>\n\n  return (\n    <div className=\"relative\">\n      {children}\n      <div\n        className={cn(\n          \"absolute inset-0 flex flex-col items-center justify-center\",\n          \"bg-white/80 backdrop-blur-sm transition-all duration-200\",\n          className\n        )}\n      >\n        <Spinner size=\"lg\" />\n        {message && (\n          <p className=\"mt-2 text-sm text-datacite-dark-blue\">{message}</p>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASO,SAAS,eAAe,EAC7B,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,YAAY,EACF;IACpB,IAAI,CAAC,WAAW,qBAAO;kBAAG;;IAE1B,qBACE,8OAAC;QAAI,WAAU;;YACZ;0BACD,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,4DACA;;kCAGF,8OAAC,mIAAA,CAAA,UAAO;wBAAC,MAAK;;;;;;oBACb,yBACC,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;;;;;;;;;;;;;AAK/D"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/app/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { EntitySearch } from '@/components/common/entity-search';\nimport { LoadingOverlay } from '@/components/ui/loading-overlay';\nimport { Text } from '@/components/typography/typography';\n\nexport default function Home() {\n  return (\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12 lg:py-16\">\n      <div className=\"w-full max-w-2xl mx-auto space-y-4 sm:space-y-6 lg:space-y-8\">\n        <div>\n          <Text variant=\"h1\" className=\"text-3xl font-bold text-datacite-dark-blue text-center mb-8 sm:mb-12\">\n            Search Organizations and Repositories\n          </Text>\n        </div>\n        <div className=\"relative\">\n          <Suspense fallback={\n            <LoadingOverlay isLoading={true} message=\"Loading search...\">\n              <div className=\"h-72 sm:h-96\" />\n            </LoadingOverlay>\n          }>\n            <EntitySearch mode=\"navigation\" className=\"max-w-2xl mx-auto\" />\n          </Suspense>\n        </div>\n\n        <div className=\"mt-6 sm:mt-8\">\n          <Text variant=\"body\" className=\"text-center text-datacite-dark-blue mt-2 text-sm sm:text-base\">\n            Search for organizations or repositories to view their metadata health statistics\n          </Text>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;8BACC,cAAA,8OAAC,8IAAA,CAAA,OAAI;wBAAC,SAAQ;wBAAK,WAAU;kCAAuE;;;;;;;;;;;8BAItG,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,qMAAA,CAAA,WAAQ;wBAAC,wBACR,8OAAC,8IAAA,CAAA,iBAAc;4BAAC,WAAW;4BAAM,SAAQ;sCACvC,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;kCAGjB,cAAA,8OAAC,gJAAA,CAAA,eAAY;4BAAC,MAAK;4BAAa,WAAU;;;;;;;;;;;;;;;;8BAI9C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,8IAAA,CAAA,OAAI;wBAAC,SAAQ;wBAAO,WAAU;kCAAgE;;;;;;;;;;;;;;;;;;;;;;AAOzG"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,IAAAA,CAAY;YAAA;SAAA;cACZC,GAAAA;YAAAA,IAAU;YAAA;SAAA;cACVC,OAAAA;YAAAA,EAAU,EAAE;YAAA;SAAA;UACd,WAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,IAAA;YAAA,IAAA;YAAA;SAAA;;OACRC,YAAYnB;IACd,EAAA,QAAA;IAAA;CAAA","ignoreList":[0]}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}