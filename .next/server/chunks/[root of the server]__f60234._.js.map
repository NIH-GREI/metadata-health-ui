{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/jshin/dev/metadata-health-ui/src/app/api/providers/%5BproviderId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport path from 'path';\nimport { readFile } from 'fs/promises';\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { providerId: string } }\n) {\n  const { providerId } = params;\n\n  try {\n    // Try to read the provider data from the data directory\n    const filePath = path.join(process.cwd(), 'public', 'uploads', providerId);\n    const fileContent = await readFile(filePath, 'utf8');\n    const data = JSON.parse(fileContent);\n\n    return NextResponse.json({ data });\n  } catch (error) {\n    // If local file is not found, try the external API\n    try {\n      const apiResponse = await fetch(`${process.env.API_BASE}/providers/${providerId}`);\n      if (!apiResponse.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await apiResponse.json();\n      return NextResponse.json({ data });\n    } catch (apiError) {\n      return NextResponse.json(\n        { error: 'Provider data not found' },\n        { status: 404 }\n      );\n    }\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAAsC;IAE9C,MAAM,EAAE,UAAU,EAAE,GAAG;IAEvB,IAAI;QACF,wDAAwD;QACxD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,WAAW;QAC/D,MAAM,cAAc,MAAM,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;QAC7C,MAAM,OAAO,KAAK,KAAK,CAAC;QAExB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAK;IAClC,EAAE,OAAO,OAAO;QACd,mDAAmD;QACnD,IAAI;YACF,MAAM,cAAc,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,YAAY;YACjF,IAAI,CAAC,YAAY,EAAE,EAAE;gBACnB,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,OAAO,MAAM,YAAY,IAAI;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE;YAAK;QAClC,EAAE,OAAO,UAAU;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;IACF;AACF"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}